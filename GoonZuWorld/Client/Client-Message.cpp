//---------------------------------
// 2004/3/5 김태곤
//---------------------------------

#include "../Common/CommonHeader.h"
#include <string.h>
#include "Client.h"

//Client
//#include "Interface/Notify_GetItem_From_Monster/NotifyGetItemFromMonsterDlg.h"
#include "Interface/NotifyGetItemDlg/NotifyGetItemDlg.h"
#include "Interface/DecreePasswdDlg/DecreePasswdDlg.h"
#include "Interface/NotifyMsgDlg/NotifyMsgDlg.h"
#include "Interface/ToolBarDlg/ToolBarDlg.h"

//----------------------------
// Common
//---------------------------
#include "../Common/Map/Map.h"
#include "Char/CharManager/CharManager.h"
#include "Map/FieldObject/FieldObject.h"

#include "../resource.h"
#include "../Server/Candidate/Candidate.h"
#include "Music/Music.h"
#include "Registry/RegistryMgr.h"
#include "SmallMap/SmallMap.h"
#include "Inventory/ItemInventory.h"
#include "Interface/NPC1/NPCTradeDlg.h"
#include "Interface/ResidentsViewDlg/ResidentsViewDlg.h"
#include "StatusBar/StatusBar.h"
#include "Skill/Skill-Manager.h"

#include "ImageInterface/ResidentLoginDraw/ResidentLoginDraw.h"

#include "../CommonLogic/MsgType-Person.h"


//#include "Interface/ForeignMerchant/ForeignMerchantDlg.h"


//#include "Interface/PartyDlg/PartyDlg.h"
//#include "Interface/PartyInviteDlg/PartyInviteDlg.h"


#include "Interface/FriendDlg/FriendDlg.h"
#include "NInterface/NFriendDlg/NFriendDlg.h"


#include "Interface/FocusManager/FocusManager.h"

#include "Interface/HtmlDlg/HtmlDlg.h"

#include "Interface/RichEditChatMgrDlg/RichEditChatMgrDlg.h"

#include "./ImageInterface/VillageNotice/VillageNotice.h"


// 윈도우 좌표 기억 관련
#include "Interface/RememberWindowPos/RememberWindowPosMgr.h"

// 마우스 오른쪽 버튼 눌렀을때 메뉴
#include "Interface/RightMouseMenu/RightMouseMenu.h"

// 우측 상단에 있는 정보들 보여주는 다이얼로그
#include "Interface/ToolBarBaseInfoDlg/ToolBarBaseInfoDlg.h"



#include "Interface/ErrorMsgDlg/ErrorMsgDlg.h"

#include "AttackEffect/AttackEffectMgr.h"


#include "Prompt/PromptBaseDefinition.h"
#include "Prompt/PromptMgr.h"

#include "DrawSequence/DrawSequence.h"

#include "../Common/Letter/Letter.h"

#include "../Common/Bullet/Bullet.h"
#include "../Common/Smoke/Smoke.h"
#include "../CommonLogic/MagicMgr/MagicMgr.h"
#include "../Client/ItemInfo/ItemInfo.h"
#include "../Client/QuitConfirm/QuitConfirm.h"

// 경험치 관련 
#include "Effect/ExpCounter/ExpCounter.h"

#include "../Common/Order/Order.h"
#include "ITZEncrypt.h"

#include "../CommonLogic/MsgRval-Define.h"
#include "../CommonLogic/MsgType-System.h"
#include "../CommonLogic/MsgType-Item.h"
#include "../CommonLogic/MsgType-House.h"
#include "../CommonLogic/MsgType-Structure.h"
#include "../CommonLogic/Msg/MsgType-Horse.h"
#include "../CommonLogic/Msg/MsgType-Quest.h"
#include "../CommonLogic/Msg/MsgType-Village.h"
#include "../CommonLogic/Msg/MsgType-ItemMall.h"



#include "Effect/FireFly/FireFlyMgr.h"
#include "Cursor/Cursor.h"

#include "StatusBar/ChatStatusBar/ChatStatusBarBaseInfo.h"
#include "StatusBar/ChatStatusBar/ChatStatusBar.h"

// 채팅 관련. 
#include "Interface/DrawChat/DrawChatSurface.h"
#include "Interface/DrawChat/DrawChat.h"

// 캐릭터 이름 출력 관련
#include "Interface/DrawCharName/DrawCharNameSurface.h"


// 귓속말 채팅 관련. 
//#include "Interface/PrivateChatDlg/PrivateChatBaseInfo.h"
//#include "Interface/PrivateChatDlg/PrivateChatDlgMgr.h"

// 사운드 on off 창
#include "Interface/SoundOnOffDlg/SoundOnOffDlg.h"
#include "NInterface/NSoundOnOffDlg/NSoundOnOffDlg.h"
#include "NInterface/NChatDlg/NChatDlg.h"


// 필살기 효과. 
#include "Char/CharClient/CharCriticalEffect/CharCriticalEffect.h"

#include "../CommonLogic/CityHall/TaxPaymentListDlg.h"

// 조합형 캐릭터 서피스 관리자. 
#include "Char/CCD/CCDSurfaceMgr.h"
//이동 표식. 
#include "Effect/ClickEffect/ClickEffect.h"
// 게임 약관 
#include "GameContract/GameContract.h"
// 마을 상세 정보 
#include "NInterface/NVillageDetailInfo/NVillageDetailInfo.h"

// 공성전 결과 알림창
#include "Interface/VillageWarInfoDlg/VillageWarInfoDlg.h"

#include "Interface/SearchDetailDlg/SearchDetailDlg.h"

#include "../Common/School/School.h"

// 건물
#include "../../CommonLogic/Cityhall/Cityhall.h"
#include "../../CommonLogic/Bank/Bank-Manager.h"
#include "../../CommonLogic/Stock/Stock.h"
#include "../../CommonLogic/Market/Market.h"
#include "../../CommonLogic/House/House.h"
#include "../../CommonLogic/Hunt/Hunt.h"
#include "../../CommonLogic/PostOffice/PostOffice.h"
#include "../../CommonLogic/HorseMarket/HorseMarket.h"
#include "../../CommonLogic/RealEstate/RealEstate.h"
#include "../../CommonLogic/SummonMarket/SummonMarket.h"
#include "../../CommonLogic/Land/Land.h"
#include "../../CommonLogic/Feast/Feast.h"
#include "../../CommonLogic/SummonHeroMarket/SummonHeroMarket.h"
#include "../../CommonLogic/Mine/Mine.h"

//사망
#include "Interface/DeathDlg/DeathDlg.h"
#include "NInterface/NDeathDlg/NDeathDlg.h"

//비밀번호 권고 
#include "NInterface/NDecreePasswdDlg/NDecreePasswdDlg.h"

//공성

#include "NInterface/NVillageWarInfoDlg/NVillageWarInfoDlg.h"
#include "NInterface/NResidentsDlg/NResidentsDlg.h"

// 건물 관련
#include "NStructureDlg/CityHall/NBeResidentDlg.h"
#include "NStructureDlg/CityHall/NCityhallDlg.h"

#include "NInterface/NStatusBarDlg/NStatusBarDlg.h"

extern cltCommonLogic* pclClient;
extern DWORD dwQuitTimer;

#define ClientMessageMap(AAA,BBB) m_pClientMsgPtr[AAA].ClientMsgFunc = &cltClient::BBB

void cltClient::ClientMsgNullFunc(cltMsg* pclMsg, SI32 id)
{
	TCHAR buffer[256];
	StringCchPrintf(buffer, 256, TEXT("Msg:%d Size:%d"), pclMsg->clHead.usCmd, pclMsg->clHead.usSize);
	MessageBox(NULL, buffer, TEXT("InBufferMessageOperation"), MB_OK|MB_TOPMOST);
}

void cltClient::RegisterClientMsgMap()
{
	m_pClientMsgPtr = new stClientMsgPtr[GAMEMSG_END];
	if(m_pClientMsgPtr == NULL)
	{
		MessageBox(NULL, TEXT("함수포인터 할당 실패"), NULL, MB_OK);
	}
	else
	{
		// 알 수 없는 메시지가 왔을때 처리할 함수를 할당한다.
		for(int i = 0; i < GAMEMSG_END; i++)
			ClientMessageMap(i, ClientMsgNullFunc);

		// APEX-
#ifdef _CHINA
		ClientMessageMap(GAMEMSG_RESPONSE_APEXDATA,								DoMsg_GAMEMSG_RESPONSE_APEXDATA);
#endif
		// -APEX
		ClientMessageMap(GAMEMSG_RESPONSE_USERORDER,							DoMsg_GAMEMSG_RESPONSE_USERORDER);
		ClientMessageMap(GAMEMSG_RESPONSE_UPDATECHILDLIST, 						DoMsg_GAMEMSG_RESPONSE_UPDATECHILDLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_RENOUNCEPUPIL, 						DoMsg_GAMEMSG_RESPONSE_RENOUNCEPUPIL);
		ClientMessageMap(GAMEMSG_RESPONSE_OVERTAKETEACHERLEVEL, 				DoMsg_GAMEMSG_RESPONSE_OVERTAKETEACHERLEVEL);
		ClientMessageMap(GAMEMSG_RESPONSE_CHILDINFO,							DoMsg_GAMEMSG_RESPONSE_CHILDINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_FATHERAPPLYERLIST,					DoMsg_GAMEMSG_RESPONSE_FATHERAPPLYERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_SETFATHER,							DoMsg_GAMEMSG_RESPONSE_SETFATHER);
		ClientMessageMap(GAMEMSG_RESPONSE_SETSHOWPUCHIKOMI,						DoMsg_GAMEMSG_RESPONSE_SETSHOWPUCHIKOMI);
		ClientMessageMap(GAMEMSG_RESPONSE_HORSEFREE,							DoMsg_GAMEMSG_RESPONSE_HORSEFREE);
		// 해피빈 퀘스트 ------------------------------------------------------------------------
		//KHY - 1001 - 기승동물 5마리 보유 수정.
		ClientMessageMap(GAMEMSG_RESPONSE_CHANGEHORSE,							DoMsg_GAMEMSG_RESPONSE_CHANGEHORSE);		
		//------------------------------------------------------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_WARPEFFECT,							DoMsg_GAMEMSG_RESPONSE_WARPEFFECT);
		ClientMessageMap(GAMEMSG_RESPONSE_SPECIALQUESTREWARD,					DoMsg_GAMEMSG_RESPONSE_SPECIALQUESTREWARD);
		ClientMessageMap(GAMEMSG_RESPONSE_SPECIALQUESTMADE,						DoMsg_GAMEMSG_RESPONSE_SPECIALQUESTMADE);
		ClientMessageMap(GAMEMSG_RESPONSE_QUESTUSERINFO,						DoMsg_GAMEMSG_RESPONSE_QUESTUSERINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_CLEAR_SPECIALWORD,					DoMsg_GAMEMSG_RESPONSE_CLEAR_SPECIALWORD);
		ClientMessageMap(GAMEMSG_RESPONSE_SETPERSONNAMINGINFO,					DoMsg_GAMEMSG_RESPONSE_SETPERSONNAMINGINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_SETPPERSONCURRENTNAMING,				DoMsg_GAMEMSG_RESPONSE_SETPPERSONCURRENTNAMING);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIZE_GAMEEVENT,						DoMsg_GAMEMSG_RESPONSE_PRIZE_GAMEEVENT);
		ClientMessageMap(GAMEMSG_RESPONSE_GET_WEAPONSKILLCOST,					DoMsg_GAMEMSG_RESPONSE_GET_WEAPONSKILLCOST);
		ClientMessageMap(GAMEMSG_RESPONSE_SET_WEAPONSKILL,						DoMsg_GAMEMSG_RESPONSE_SET_WEAPONSKILL);
		ClientMessageMap(GAMEMSG_RESPONSE_EVENTNPC,								DoMsg_GAMEMSG_RESPONSE_EVENTNPC);
		ClientMessageMap(GAMEMSG_RESPONSE_ROULETTEGAME_RESULT,					DoMsg_GAMEMSG_RESPONSE_ROULETTEGAME_RESULT);
		ClientMessageMap(GAMEMSG_RESPONSE_QUESTEFFECT,							DoMsg_GAMEMSG_RESPONSE_QUESTEFFECT);
		ClientMessageMap(GAMEMSG_RESPONSE_SERVERTIME,							DoMsg_GAMEMSG_RESPONSE_SERVERTIME);
		ClientMessageMap(GAMEMSG_RESPONSE_REQUEST_SETFATHER,					DoMsg_GAMEMSG_RESPONSE_REQUEST_SETFATHER);
		ClientMessageMap(GAMEMSG_RESPONSE_PVPRESULT,							DoMsg_GAMEMSG_RESPONSE_PVPRESULT);
		//------------------------------------------------------------------------------------
		// 캐릭터의 특정 정보 
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_QUEST,							DoMsg_GAMEMSG_RESPONSE_PERSON_QUEST);
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_HORSE,							DoMsg_GAMEMSG_RESPONSE_PERSON_HORSE);
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_IP,							DoMsg_GAMEMSG_RESPONSE_PERSON_IP);			
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_HEALTH,						DoMsg_GAMEMSG_RESPONSE_PERSON_HEALTH);		
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_SKILL,							DoMsg_GAMEMSG_RESPONSE_PERSON_SKILL);		
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_ONESKILL,						DoMsg_GAMEMSG_RESPONSE_PERSON_ONESKILL);		
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_ALLITEM,						DoMsg_GAMEMSG_RESPONSE_PERSON_ALLITEM);		
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_BANK,							DoMsg_GAMEMSG_RESPONSE_PERSON_BANK);			
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_STOCK,							DoMsg_GAMEMSG_RESPONSE_PERSON_STOCK);		
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_MARKET,						DoMsg_GAMEMSG_RESPONSE_PEERSON_MARKET);		
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_STOCKORDER,					DoMsg_GAMEMSG_RESPONSE_PERSON_STOCKORDER);	
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_WORLDMONEY,					DoMsg_GAMEMSG_RESPONSE_PERSON_WORLDMONEY);
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_GUILTY,						DoMsg_GAMEMSG_RESPONSE_PERSON_GUILTY);		
		ClientMessageMap(GAMEMSG_RESPONSE_CHANGESTATUSINFO,						DoMsg_GAMEMSG_RESPONSE_CHANGESTATUSINFO);	
		ClientMessageMap(GAMEMSG_RESPONSE_PERSON_INNERSTATUS,					DoMsg_GAMEMSG_RESPONSE_PERSON_INNERSTATUS);	
		ClientMessageMap(GAMEMSG_RESPONSE_GETGREETING,							DoMsg_GAMEMSG_RESPONSE_GETGREETING);
		//------------------------------------------------------------------------------------

		// 해피빈 퀘스트 ------------------------------------------------------------------------
		//KHY - 0822 - 해피빈 퀘스트 추가.
		ClientMessageMap(GAMEMSG_RESPONSE_HAPPYBEANQUEST_START_NO,				DoMsg_GAMEMSG_RESPONSE_HAPPYBEANQUEST_START_NO);
		ClientMessageMap(GAMEMSG_RESPONSE_HAPPYBEANQUEST_START_OK,				DoMsg_GAMEMSG_RESPONSE_HAPPYBEANQUEST_START_OK);
		ClientMessageMap(GAMEMSG_RESPONSE_HAPPYBEANQUEST_REWARD,				DoMsg_GAMEMSG_RESPONSE_HAPPYBEANQUEST_REWARD);
		//------------------------------------------------------------------------------------

		// [지연] 군주데이 미션 완료에 대한 보상을 알림
		ClientMessageMap(GAMEMSG_RESPONSE_GOONZUDAYMISSION_CLEARREWARD,			DoMsg_GAMEMSG_RESPONSE_GOONZUDAYMISSION_CLEARREWARD);

		// 해피빈 퀘스트 ------------------------------------------------------------------------
		//KHY - 0906 - 게임방 이벤트 쿠폰.
		ClientMessageMap(GAMEMSG_RESPONSE_EVENTCOUPON,							DoMsg_GAMEMSG_RESPONSE_EVENTCOUPON);
		//------------------------------------------------------------------------------------
		//
		//// 옥션이벤트 ------------------------------------------------------------------------
		////옥션이벤트 [2007.09.10손성웅]
		//ClientMessageMap(GAMEMSG_RESPONSE_AUCTIONEVENTCOUPON, DoMsg_GAMEMSG_RESPONSE_AUCTIONEVENTCOUPON);
		////------------------------------------------------------------------------------------

		ClientMessageMap(GAMEMSG_RESPONSE_MISSIONQUEST_START,					DoMsg_GAMEMSG_RESPONSE_MISSIONQUEST_START);

		ClientMessageMap(GAMEMSG_REPONSE_INCHUNGRY,								DoMsg_GAMEMSG_REPONSE_INCHUNGRY);
		ClientMessageMap(GAMEMSG_RESPONSE_INCLIFE, 								DoMsg_GAMEMSG_RESPONSE_INCLIFE);
		ClientMessageMap(GAMEMSG_RESPONSE_INCMANA,								DoMsg_GAMEMSG_RESPONSE_INCMANA);
		ClientMessageMap(GAMEMSG_RESPONSE_ALLCHARINFO,							DoMsg_GAMEMSG_RESPONSE_ALLCHARINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_ALLCHARINFOONE, 						DoMsg_GAMEMSG_RESPONSE_ALLCHARINFOONE);
		ClientMessageMap(GAMEMSG_RESPONSE_ALLCHARINFOTWO, 						DoMsg_GAMEMSG_RESPONSE_ALLCHARINFOTWO);
		ClientMessageMap(GAMEMSG_RESPONSE_CHANGEMONEY,							DoMsg_GAMEMSG_RESPONSE_CHANGEMONEY);
		ClientMessageMap(GAMEMSG_RESPONSE_WARKILL,								DoMsg_GAMEMSG_RESPONSE_WARKILL);
		ClientMessageMap(GAMEMSG_RESPONSE_JIM,									DoMsg_GAMEMSG_RESPONSE_JIM);
		ClientMessageMap(GAMEMSG_RESPONSE_HOMEVILLAGE,							DoMsg_GAMEMSG_RESPONSE_HOMEVILLAGE);
		ClientMessageMap(GAMEMSG_RESPONSE_PLAYTIME,								DoMsg_GAMEMSG_RESPONSE_PLAYTIME);
		ClientMessageMap(GAMEMSG_RESPONSE_HIT, 									DoMsg_GAMEMSG_RESPONSE_HIT);
		ClientMessageMap(GAMEMSG_RESPONSE_GETEXP,								DoMsg_GAMEMSG_RESPONSE_GETEXP);
		ClientMessageMap(GAMEMSG_RESPONSE_GENERALEFT,							DoMsg_GAMEMSG_RESPONSE_GENERALEFT);
		ClientMessageMap(GAMEMSG_RESPONSE_MAKEITEMDELAY,						DoMsg_GAMEMSG_RESPONSE_MAKEITEMDELAY);
		ClientMessageMap(GAMEMSG_RESPONSE_PERSONPRIVATEINFO,					DoMsg_GAMEMSG_RESPONSE_PERSONPRIVATEINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_ADDINFO,								DoMsg_GAMEMSG_RESPONSE_ADDINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_CHANGESUMMONSTATUS,					DoMsg_GAMEMSG_RESPONSE_CHANGESUMMONSTATUS);
		ClientMessageMap(GAMEMSG_RESPONSE_CHANGEMAGIC,							DoMsg_GAMEMSG_RESPONSE_CHANGEMAGIC);
		ClientMessageMap(GAMEMSG_RESPONSE_EVENTINFO,							DoMsg_GAMEMSG_RESPONSE_EVENTINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_CLIENTCHARUNIQUE,						DoMsg_GAMEMSG_RESPONSE_CLIENTCHARUNIQUE);

		ClientMessageMap(GAMEMSG_RESPONSE_LOGIN,								DoMsg_GAMEMSG_RESPONSE_LOGIN);
		ClientMessageMap(GAMEMSG_RESPONSE_LOGINMANY,							DoMsg_GAMEMSG_RESPONSE_LOGINMANY);
		ClientMessageMap(GAMEMSG_RESPONSE_LOGOUT,								DoMsg_GAMEMSG_RESPONSE_LOGOUT);
		ClientMessageMap(GAMEMSG_RESPONSE_RECOMMENDPERSONAVAILABLE,				DoMsg_GAMEMSG_RESPONSE_RECOMMENDPERSONAVAILABLE);
		ClientMessageMap(GAMEMSG_RESPONSE_RECOMMENDPERSON,						DoMsg_GAMEMSG_RESPONSE_RECOMMENDPERSON);
		ClientMessageMap(GAMEMSG_RESPONSE_HEADCHAT,								DoMsg_GAMEMSG_RESPONSE_HEADCHAT);
		ClientMessageMap(GAMEMSG_RESPONSE_NOTICE,								DoMsg_GAMEMSG_RESPONSE_NOTICE);
		ClientMessageMap(GAMEMSG_RESPONSE_CHARLIST,								DoMsg_GAMEMSG_RESPONSE_CHARLIST);//케릭터 리스트를 받는다
		ClientMessageMap(GAMEMSG_RESPONSE_DELUSERCHAR,							DoMsg_GAMEMSG_RESPONSE_DELUSERCHAR);
		ClientMessageMap(GAMEMSG_RESPONSE_PREDELUSERCHAR,						DoMsg_GAMEMSG_RESPONSE_PREDELUSERCHAR);
		ClientMessageMap(GAMEMSG_RESPONSE_MAKENEWCHAR,							DoMsg_GAMEMSG_RESPONSE_MAKENEWCHAR);
		ClientMessageMap(GAMEMSG_RESPONSE_VILLAGESTRUCT,						DoMsg_GAMEMSG_RESPONSE_VILLAGESTRUCT);
		ClientMessageMap(GAMEMSG_RESPONSE_BUILDSTRUCTURE,						DoMsg_GAMEMSG_RESPONSE_BUILDSTRUCTURE);
		ClientMessageMap(GAMEMSG_RESPONSE_DESTROYSTRUCTURE,						DoMsg_GAMEMSG_RESPONSE_DESTROYSTRUCTURE);
		ClientMessageMap(GAMEMSG_RESPONSE_VILLAGENOTICE,						DoMsg_GAMEMSG_RESPONSE_VILLAGENOTICE);
		ClientMessageMap(GAMEMSG_RESPONSE_VILLAGELEVELDETAILINFO,				DoMsg_GAMEMSG_RESPONSE_VILLAGELEVELDETAILINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_NAME,									DoMsg_GAMEMSG_RESPONSE_NAME);
		ClientMessageMap(GAMEMSG_RESPONSE_PERSONITEMINFO,						DoMsg_GAMEMSG_RESPONSE_PERSONITEMINFO);
		ClientMessageMap( GAMEMSG_RESPONSE_PERSONENCHANTITEMINFO,				DoMsg_GAMEMSG_RESPONSE_PERSONENCHANTITEMINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_PERSONALLSHAPEINFO,					DoMsg_GAMEMSG_RESPONSE_PERSONALLSHAPEINFO);	// 다른 사용자의 복장 정보를 받았다. 
		ClientMessageMap(GAMEMSG_RESPONSE_RANK,									DoMsg_GAMEMSG_RESPONSE_RANK);
		ClientMessageMap(GAMEMSG_RESPONSE_REALESTATE,							DoMsg_GAMEMSG_RESPONSE_REALESTATE);
		ClientMessageMap(GAMEMSG_RESPONSE_CHARUPDATE,							DoMsg_GAMEMSG_RESPONSE_CHARUPDATE);
		ClientMessageMap(GAMEMSG_RESPONSE_STRINFO,								DoMsg_GAMEMSG_RESPONSE_STRINFO); // 건물의 정보를 받았다. 
		ClientMessageMap(GAMEMSG_RESPONSE_VILLAGEINFOSTRINFO,					DoMsg_GAMEMSG_RESPONSE_VILLAGEINFOSTRINFO);	// 마을 상세 정보용 건물의 정보를 받았다. 
		ClientMessageMap(GAMEMSG_RESPONSE_REPAIRSTRUCTURE,						DoMsg_GAMEMSG_RESPONSE_REPAIRSTRUCTURE);			// 마을 건물을 수리한다 
		ClientMessageMap(GAMEMSG_RESPONSE_GETTAXLIST,							DoMsg_GAMEMSG_RESPONSE_GETTAXLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_GETDIVIDENDLIST,						DoMsg_GAMEMSG_RESPONSE_GETDIVIDENDLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_HIRENPC,								DoMsg_GAMEMSG_RESPONSE_HIRENPC);
		ClientMessageMap(GAMEMSG_RESPONSE_NPCPAYMENT,							DoMsg_GAMEMSG_RESPONSE_NPCPAYMENT);
		ClientMessageMap(GAMEMSG_RESPONSE_RESIDENTAPPLYERLIST,					DoMsg_GAMEMSG_RESPONSE_RESIDENTAPPLYERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_RESIDENTLIST,							DoMsg_GAMEMSG_RESPONSE_RESIDENTLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_RESIDENTINFO,							DoMsg_GAMEMSG_RESPONSE_RESIDENTINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_UPDATERESIDENTAPPLYERLIST,			DoMsg_GAMEMSG_RESPONSE_UPDATERESIDENTAPPLYERLIST);	// 주민 등록 신청자 리스트를 갱신한다 
		ClientMessageMap(GAMEMSG_RESPONSE_ALLSTRCHIEFINFO,						DoMsg_GAMEMSG_RESPONSE_ALLSTRCHIEFINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_STOCKTRADEINFO,						DoMsg_GAMEMSG_RESPONSE_STOCKTRADEINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_STOCKPRICE,							DoMsg_GAMEMSG_RESPONSE_STOCKPRICE);
		ClientMessageMap(GAMEMSG_RESPONSE_CANCEL_STOCKORDER,					DoMsg_GAMEMSG_RESPONSE_CANCEL_STOCKORDER);
		ClientMessageMap(GAMEMSG_RESPONSE_GETVILLAGEINFO,						DoMsg_GAMEMSG_RESPONSE_GETVILLAGEINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_GETNOWVILLAGEINFO,					DoMsg_GAMEMSG_RESPONSE_GETNOWVILLAGEWARINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_SETVILLAGEMARK,						DoMsg_GAMEMSG_RESPONSE_SETVILLAGEMARK);
		ClientMessageMap(GAMEMSG_RESPONSE_RESIDENTSLIST,						DoMsg_GAMEMSG_RESPONSE_RESIDENTSLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_RESIDENTLOGIN,						DoMsg_GAMEMSG_RESPONSE_RESIDENTLOGIN);
		ClientMessageMap(GAMEMSG_RESPONSE_DECLAREWAR,							DoMsg_GAMEMSG_RESPONSE_DECLAREWAR);
		ClientMessageMap(GAMEMSG_RESPONSE_CANCELDECLAREWAR,						DoMsg_GAMEMSG_RESPONSE_CANCELDECLAREWAR);
		ClientMessageMap(GAMEMSG_RESPONSE_GETSTRNOTICE,							DoMsg_GAMEMSG_RESPONSE_GETSTRNOTICE);
		ClientMessageMap(GAMEMSG_RESPONSE_SETSYMBOLSTATUS,						DoMsg_GAMEMSG_RESPONSE_SETSYMBOLSTATUS);
		ClientMessageMap(GAMEMSG_RESPONSE_SETCASTLESTATUS,						DoMsg_GAMEMSG_RESPONSE_SETCASTLESTATUS);
		ClientMessageMap(GAMEMSG_RESPONSE_VILLAGEWARRESULT,						DoMsg_GAMEMSG_RESPONSE_VILLAGEWARRESULT);
		ClientMessageMap(GAMEMSG_RESPONSE_VILLAGEWARRESULT_FOR_VILLAGEMEMBER,	DoMsg_GAMEMSG_RESPONSE_VILLAGEWARRESULT_FOR_VILLAGEMEMBER);
		ClientMessageMap(GAMEMSG_RESPONSE_ENDVILLAGEWAR,						DoMsg_GAMEMSG_RESPONSE_ENDVILLAGEWAR);
		ClientMessageMap(GAMEMSG_RESPONSE_INVESTLIST,							DoMsg_GAMEMSG_RESPONSE_INVESTLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_CHIEFINFO,							DoMsg_GAMEMSG_RESPONSE_CHIEFINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_VILLAGEBOARD,							DoMsg_GAMEMSG_RESPONSE_VILLAGEBOARD);
		ClientMessageMap(GAMEMSG_RESPONSE_EVENT_INSERTMATERIAL,					DoMsg_GAMEMSG_RESPONSE_EVENT_INSERTMATERIAL);
		ClientMessageMap(GAMEMSG_RESPONSE_EVENT_MATERIALLIST,					DoMsg_GAMEMSG_RESPONSE_EVENT_MATERIALLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_EVENT_MATERIALCOMPLETE,				DoMsg_GAMEMSG_RESPONSE_EVENT_MATERIALCOMPLETE);
		ClientMessageMap(GAMEMSG_RESPONSE_EVENT_COMPLETEBUILD,					DoMsg_GAMEMSG_RESPONSE_EVENT_COMPLETEBUILD);		
		ClientMessageMap(GAMEMSG_RESPONSE_SERVERRTN,							DoMsg_GAMEMSG_RESPONSE_SERVERRTN);
		//KHY - 0910 - 클라이언트로 캐릭터형태의 리턴값을 보낸다.
		ClientMessageMap(GAMEMSG_RESPONSE_CHARSERVERRTN,						DoMsg_GAMEMSG_RESPONSE_CHARSERVERRTN);
		ClientMessageMap(GAMEMSG_RESPONSE_NOTICE_QUEST,							DoMsg_GAMEMSG_RESPONSE_NOTICE_QUEST);

		ClientMessageMap(GAMEMSG_RESPONSE_CANDIDATELIST,						DoMsg_GAMEMSG_RESPONSE_CANDIDATELIST);
		ClientMessageMap(GAMEMSG_RESPONSE_DATE,									DoMsg_GAMEMSG_RESPONSE_DATE);
		ClientMessageMap(GAMEMSG_RESPONSE_MARKETORDER,							DoMsg_GAMEMSG_RESPONSE_MARKETORDER);
		ClientMessageMap(GAMEMSG_RESPONSE_LOWPRICESTOCKORDER,					DoMsg_GAMEMSG_RESPONSE_LOWPRICESTOCKORDER);
		ClientMessageMap(GAMEMSG_RESPONSE_USERID,								DoMsg_GAMEMSG_RESPONSE_USERID);
		ClientMessageMap(GAMEMSG_RESPONSE_PERSONNAME_FROMPERSONID,				DoMsg_GAMEMSG_RESPONSE_PERSONNAME_FROMPERSONID);
		ClientMessageMap(GAMEMSG_RESPONSE_RIGHTMOUSE_USERLIST_NAME,				DoMsg_GAMEMSG_RESPONSE_RIGHTMOUSE_USERLIST_NAME);
		ClientMessageMap(GAMEMSG_RESPONSE_TIRED_STATUS,							DoMsg_GAMEMSG_RESPONSE_TIRED_STATUS );
		ClientMessageMap(GAMEMSG_RESPONSE_DONATEVILLAGEMONEY,					DoMsg_GAMEMSG_RESPONSE_DONATEVILLAGEMONEY );
		ClientMessageMap(GAMEMSG_RESPONSE_DONATEMEMBERLIST,						DoMsg_GAMEMSG_RESPONSE_DONATEMEMBERLIST );
		// 케릭터 옵션 정보 셋팅 
		ClientMessageMap(GAMEMSG_RESPONSE_CHAR_OPTION,							DoMsg_GAMEMSG_RESPONSE_CHAR_OPTION);
		// 케릭터 옵션 정보 를 요청한다.
		ClientMessageMap(GAMEMSG_RESPONSE_CHAR_GET_OPTION,						DoMsg_GAMEMSG_RESPONSE_CHAR_GET_OPTION);

		// [진성] 영웅의 동상 이벤트 버프룰렛 돌릴때 클라 처리. => 2008-6-10
		ClientMessageMap(GAMEMSG_RESPONSE_BUFF_ROULETTE,						DoMsg_GAMEMSG_RESPONSE_BUFF_ROULETTE);

		//	[종호_BALLENCECURRENCY] 통화량 조절 Server -> Client
		ClientMessageMap(GAMEMSG_RESPONSE_BALANCECURRENCY_BUFF,					DoMsg_GAMEMSG_RESPONSE_BALANCECURRENCY_BUFF);

		ClientMessageMap(GAMEMSG_RESPONSE_SET_HOMEPAGE_URL,						DoMsg_GAMEMSG_RESPONSE_SET_HOMEPAGE_URL);
		ClientMessageMap(GAMEMSG_RESPONSE_GET_HOMEPAGE_URL,						DoMsg_GAMEMSG_RESPONSE_GET_HOMEPAGE_URL);

		// [진성] 서버 이벤트 처리 함수 연결.  => 2008-6-19 
		ClientMessageMap(GAMEMSG_RESPONSE_SERVER_EVENT_RANK_INFO,				DoMsg_GAMEMSG_RESPONSE_SERVER_EVENT_RANK_INFO			);
		ClientMessageMap(GAMEMSG_RESPONSE_SERVER_EVENT_SERVER_INFO,				DoMsg_GAMEMSG_RESPONSE_SERVER_EVENT_SERVER_INFO		);
		ClientMessageMap(GAMEMSG_RESPONSE_SERVER_DAILY_EVENT_SERVER_INFO,		DoMsg_GAMEMSG_RESPONSE_SERVER_DAILY_EVENT_SERVER_INFO	);
		ClientMessageMap(GAMEMSG_RESPONSE_SERVER_EVENT_PERSONAL_INFO,			DoMsg_GAMEMSG_RESPONSE_SERVER_EVENT_PERSONAL_INFO		);
		ClientMessageMap(GAMEMSG_RESPONSE_SERVER_EVENT_INSTANCEMAP_BONUS_FIGURE, DoMsg_GAMEMSG_RESPONSE_SERVER_EVENT_INSTANCEMAP_BONUS_FIGURE		);


		// [영훈] 서버 이벤트 퀘스트
		ClientMessageMap(GAMEMSG_RESPONSE_SERVER_EVENT_QUEST_START,				DoMsg_GAMEMSG_RESPONSE_SERVER_EVENT_QUEST_START		);
		ClientMessageMap(GAMEMSG_RESPONSE_SERVER_EVENT_QUEST_RUNINFO,			DoMsg_GAMEMSG_RESPONSE_SERVER_EVENT_QUEST_RUNINFO		);
		ClientMessageMap(GAMEMSG_RESPONSE_SERVER_EVENT_QUEST_CLEARSTATUS,		DoMsg_GAMEMSG_RESPONSE_SERVER_EVENT_QUEST_CLEARSTATUS	);
		ClientMessageMap(GAMEMSG_RESPONSE_SERVER_EVENT_INSTANCEDUNGEON_RUNINFO, DoMsg_GAMEMSG_RESPONSE_SERVER_EVENT_INSTANCEDUNGEON_RUNINFO	);

		//-------------------------------------------
		// 시전 
		//-------------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_MYHOUSEUNITLIST,						DoMsg_GAMEMSG_RESPONSE_MYHOUSEUNITLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITLIST,						DoMsg_GAMEMSG_RESPONSE_HOUSEUNITLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITLIST_DETAIL,					DoMsg_GAMEMSG_RESPONSE_HOUSEUNITLIST_DETAIL);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEAPPLYERLIST,						DoMsg_GAMEMSG_RESPONSE_HOUSEAPPLYERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSECANCELLATIONPENALTYMONEY,		DoMsg_GAMEMSG_RESPONSE_HOUSECANCELLATIONPENALTYMONEY );
		ClientMessageMap(GAMEMSG_RESPONSE_SETGAMEDELAY,							DoMsg_GAMEMSG_RESPONSE_SETGAMEDELAY);
		ClientMessageMap(GAMEMSG_RESPONSE_STGITEMINFO,							DoMsg_GAMEMSG_RESPONSE_STGITEMINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_STGINFO,								DoMsg_GAMEMSG_RESPONSE_STGINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITSTABLECREATE,				DoMsg_GAMEMSG_RESPONSE_HOUSEUNITSTABLECREATE);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITHORSEIN,						DoMsg_GAMEMSG_RESPONSE_HOUSEUNITHORSEIN);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITHORSEOUT,					DoMsg_GAMEMSG_RESPONSE_HOUSEUNITHORSEOUT);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITHORSEINFOSET,				DoMsg_GAMEMSG_RESPONSE_HOUSEUNITHORSEINFOSET);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITHORSEEATFOOD,				DoMsg_GAMEMSG_RESPONSE_HOUSEUNITHORSEEATFOOD);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITUSEDGOODSBUILDINGCREATE,		DoMsg_GAMEMSG_RESPONSE_HOUSEUNITUSEDGOODSBUILDINGCREATE);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITMAKEITEMFROMUSEDGOODSINFO,	DoMsg_GAMEMSG_RESPONSE_HOUSEUNITMAKEITEMFROMUSEDGOODSINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITMAKEITEMFROMUSEDGOODS,		DoMsg_GAMEMSG_RESPONSE_HOUSEUNITMAKEITEMFROMUSEDGOODS);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITMAKEITEMFROMUSEDGOODSNOTIFY,	DoMsg_GAMEMSG_RESPONSE_HOUSEUNITMAKEITEMFROMUSEDGOODSNOTIFY);
		ClientMessageMap(GAMEMSG_RESPONSE_HOUSEUNITNAMECHANGE,					DoMsg_GAMEMSG_RESPONSE_HOUSEUNITNAMECHANGE);

		//-------------------------------------------
		// 농업, 어업, 축산업  공통용
		//-------------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_AGRICULTUREAUTOGAIN,					DoMsg_GAMEMSG_RESPONSE_AGRICULTUREAUTOGAIN);
		ClientMessageMap(GAMEMSG_RESPONSE_AGRICULTUREGETPRODUCTS,				DoMsg_GAMEMSG_RESPONSE_AGRICULTUREGETPRODUCTS);
		ClientMessageMap(GAMEMSG_RESPONSE_AGRICULTUREGETPRODUCTSNOTIFY,			DoMsg_GAMEMSG_RESPONSE_AGRICULTUREGETPRODUCTSNOTIFY);
		ClientMessageMap(GAMEMSG_RESPONSE_AGRICULTUREPAYRENTFEE,				DoMsg_GAMEMSG_RESPONSE_AGRICULTUREPAYRENTFEE);
		ClientMessageMap(GAMEMSG_RESPONSE_AGRICULTUREFORNOTRENTMAN,				DoMsg_GAMEMSG_RESPONSE_AGRICULTUREFORNOTRENTMAN);
		ClientMessageMap(GAMEMSG_RESPONSE_AGRICULTURESTART,						DoMsg_GAMEMSG_RESPONSE_AGRICULTURESTART);
		ClientMessageMap(GAMEMSG_RESPONSE_AGRICULTURELEASELEFTTIME,				DoMsg_GAMEMSG_RESPONSE_AGRICULTURELEASELEFTTIME);

		//-------------------------------------------
		// 낚시
		//-------------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_FISHINGSTART,							DoMsg_GAMEMSG_RESPONSE_FISHINGSTART);
		ClientMessageMap(GAMEMSG_RESPONSE_FISHINGDECREASETOOLDURABILITY,		DoMsg_GAMEMSG_RESPONSE_FISHINGDECREASETOOLDURABILITY);
		ClientMessageMap(GAMEMSG_RESPONSE_FISHINGGETMARINEPRODUCTS,				DoMsg_GAMEMSG_RESPONSE_FISHINGGETMARINEPRODUCTS);
		ClientMessageMap(GAMEMSG_RESPONSE_FISHINGGETMARINEPRODUCTSNOTIFY,		DoMsg_GAMEMSG_RESPONSE_FISHINGGETMARINEPRODUCTSNOTIFY);

		//-------------------------------------------
		// 농경
		//-------------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_FARMINGGETPRODUCTS,					DoMsg_GAMEMSG_RESPONSE_FARMINGGETPRODUCTS);
		ClientMessageMap(GAMEMSG_RESPONSE_FARMINGGETPRODUCTSNOTIFY,				DoMsg_GAMEMSG_RESPONSE_FARMINGGETPRODUCTSNOTIFY);

		//-------------------------------------------
		// 채굴
		//-------------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_MININGGETPRODUCTS,					DoMsg_GAMEMSG_RESPONSE_MININGGETPRODUCTS);
		ClientMessageMap(GAMEMSG_RESPONSE_MININGGETPRODUCTSNOTIFY,				DoMsg_GAMEMSG_RESPONSE_MININGGETPRODUCTSNOTIFY);
		ClientMessageMap(GAMEMSG_RESPONSE_WEATHER,								DoMsg_GAMEMSG_RESPONSE_WEATHER);	// 날씨 정보를 받는다. 
		ClientMessageMap(GAMEMSG_RESPONSE_GAMEMASTERLEVEL,						DoMsg_GAMEMSG_RESPONSE_GAMEMASTERLEVEL);
		ClientMessageMap(GAMEMSG_RESPONSE_NEIGHBOURHORSE,						DoMsg_GAMEMSG_RESPONSE_NEIGHBOURHORSE);
		ClientMessageMap(GAMEMSG_RESPONSE_WINWARPRIZE,							DoMsg_GAMEMSG_RESPONSE_WINWARPRIZE);
		ClientMessageMap(GAMEMSG_RESPONSE_RIDEHORSE,							DoMsg_GAMEMSG_RESPONSE_RIDEHORSE);
		ClientMessageMap(GAMEMSG_RESPONSE_UNRIDEHORSE,							DoMsg_GAMEMSG_RESPONSE_UNRIDEHORSE);
		ClientMessageMap(GAMEMSG_RESPONSE_HORSENAMECHANGE,						DoMsg_GAMEMSG_RESPONSE_HORSENAMECHANGE);
		ClientMessageMap(GAMEMSG_RESPONSE_LEVELUP,								DoMsg_GAMEMSG_RESPONSE_LEVELUP);
		//KHY - 1205 - 유저레벨업 공지
		ClientMessageMap(GAMEMSG_RESPONSE_LEVELUPNOTICE,						DoMsg_GAMEMSG_RESPONSE_LEVELUPNOTICE);
		ClientMessageMap(GAMEMSG_RESPONSE_DELHOUSEAPPLYER,						DoMsg_GAMEMSG_RESPONSE_DELHOUSEAPPLYER);		// 시전 임차 희망자 명단을 모두 삭제한다. 
		ClientMessageMap(GAMEMSG_RESPONSE_MARKETSELLINFO,						DoMsg_GAMEMSG_RESPONSE_MARKETSELLINFO);			// 객주에서 나의 물건이 거래된내역을  받는다. 
		ClientMessageMap(GAMEMSG_RESPONSE_LETTER,								DoMsg_GAMEMSG_RESPONSE_LETTER);					// 쪽지를 받았다.
		ClientMessageMap(GAMEMSG_RESPONSE_ACCOUNTLETTER,						DoMsg_GAMEMSG_RESPONSE_ACCOUNTLETTER);			// 쪽지를 받았다.
		ClientMessageMap(GAMEMSG_RESPONSE_NOTICE_ITEMUSEABLEDAY,				DoMsg_GAMEMSG_RESPONSE_NOTICE_ITEMUSEABLEDAY);
		ClientMessageMap(GAMEMSG_RESPONSE_DEALTHPENALTYINFO,					DoMsg_GAMEMSG_RESPONSE_DEALTHPENALTYINFO);		// 사망 페널티 정보를 받았다. 
		ClientMessageMap(GAMEMSG_RESPONSE_REVIVE,								DoMsg_GAMEMSG_RESPONSE_REVIVE);					// 부활 확인 정보를 받았다.
		ClientMessageMap(GAMEMSG_RESPONSE_SELLNPC,								DoMsg_GAMEMSG_RESPONSE_SELLNPC);
		ClientMessageMap(GAMEMSG_RESPONSE_BUYNPC,								DoMsg_GAMEMSG_RESPONSE_BUYNPC);
		ClientMessageMap(GAMEMSG_RESPONSE_NPCSELLITEMINFO,						DoMsg_GAMEMSG_RESPONSE_NPCSELLITEMINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_INVESTMENTGETINFO,					DoMsg_GAMEMSG_RESPONSE_INVESTMENTGETINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_FOREIGNMERCHANTNPCBUYINFO,			DoMsg_GAMEMSG_RESPONSE_FOREIGNMERCHANTNPCBUYINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_FOREIGNMERCHANTBUYCASHITEMINFO,		DoMsg_GAMEMSG_RESPONSE_FOREIGNMERCHANTBUYCASHITEMINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_FOREIGNMERCHANTBUYCASHITEM,			DoMsg_GAMEMSG_RESPONSE_FOREIGNMERCHANTBUYCASHITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_GETRECOMMANDPOINT ,					DoMsg_GAMEMSG_RESPONSE_GETRECOMMANDPOINT);
		ClientMessageMap(GAMEMSG_RESPONSE_BUYRECOMMANDPRODUCT,					DoMsg_GAMEMSG_RESPONSE_BUYRECOMMANDPRODUCT);
		ClientMessageMap(GAMEMSG_RESPONSE_RECOMMANDPOINTLIST,					DoMsg_GAMEMSG_RESPONSE_RECOMMANDPOINTLIST );
		ClientMessageMap(GAMEMSG_RESPONSE_VILLAGEHAVEEVENTNPC,					DoMsg_GAMEMSG_RESPONSE_VILLAGEHAVEEVENTNPC);

		ClientMessageMap(GAMEMSG_RESPONSE_TRADEMERCHANTBUYINFO,					DoMsg_GAMEMSG_RESPONSE_TRADEMERCHANTBUYINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_TRADEMERCHANTBUYITEMFROMPERSON,		DoMsg_GAMEMSG_RESPONSE_TRADEMERCHANTBUYITEMFROMPERSON);
		ClientMessageMap(GAMEMSG_RESPONSE_TRADEMERCHANTHORSEBUYINFO,			DoMsg_GAMEMSG_RESPONSE_TRADEMERCHANTHORSEBUYINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_TRADEMERCHANTBUYHORSEFROMPERSON,		DoMsg_GAMEMSG_RESPONSE_TRADEMERCHANTBUYHORSEFROMPERSON);
		ClientMessageMap(GAMEMSG_RESPONSE_TRADEMERCHANTBUYITEMINFO,				DoMsg_GAMEMSG_RESPONSE_TRADEMERCHANTBUYITEMINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_TRADEMERCHANTBUYITEM,					DoMsg_GAMEMSG_RESPONSE_TRADEMERCHANTBUYITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_TRADEMERCHANTBUYSUMMONINFO,			DoMsg_GAMEMSG_RESPONSE_TRADEMERCHANTBUYSUMMONINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONTRADE,							DoMsg_GAMEMSG_RESPONSE_SUMMONTRADE);

		ClientMessageMap(GAMEMSG_RESPONSE_PRESELLTOFOREIGNMERCHANT,				DoMsg_GAMEMSG_RESPONSE_PRESELLTOFOREIGNMERCHANT);

		//----------------------------------------
		// 개인 거래
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_ACCEPT,					DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_ACCEPT);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE,							DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_CANCEL,					DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_CANCEL);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_ADDITEM,					DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_ADDITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_DELLIST,					DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_DELLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_DELITEM,					DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_DELITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_ADDPRICE,				DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_ADDPRICE);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_ADDSTOCK,				DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_ADDSTOCK);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_ADDHOUSEUNIT,			DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_ADDHOUSEUNIT);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_ADDHORSE,				DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_ADDHORSE);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_MYACCEPT,				DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_MYACCEPT);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_MYCANCEL,				DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_MYCANCEL);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_OTHERACCEPT,				DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_OTHERACCEPT);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_OTHERCANCEL,				DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_OTHERCANCEL);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_END,						DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_END);

		//----------------------------------------
		// 파티 시스템
		//----------------------------------------
		//ClientMessageMap(GAMEMSG_RESPONSE_PARTY_CREATE,DoMsg_GAMEMSG_RESPONSE_PARTY_CREATE);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_CREATEINVITE,					DoMsg_GAMEMSG_RESPONSE_PARTY_CREATEINVITE);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_CREATEJOIN,						DoMsg_GAMEMSG_RESPONSE_PARTY_CREATEJOIN);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_INVITE,							DoMsg_GAMEMSG_RESPONSE_PARTY_INVITE);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_INVITEREJECT,					DoMsg_GAMEMSG_RESPONSE_PARTY_INVITEREJECT);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_JOIN,							DoMsg_GAMEMSG_RESPONSE_PARTY_JOIN);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_DELETE,							DoMsg_GAMEMSG_RESPONSE_PARTY_DELETE);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_ADDUSER,						DoMsg_GAMEMSG_RESPONSE_PARTY_ADDUSER);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_DELUSER,						DoMsg_GAMEMSG_RESPONSE_PARTY_DELUSER);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_FORCEDELUSER,					DoMsg_GAMEMSG_RESPONSE_PARTY_FORCEDELUSER);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_CHANGELEADER,					DoMsg_GAMEMSG_RESPONSE_PARTY_CHANGELEADER);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_NOTIFYEXP,						DoMsg_GAMEMSG_RESPONSE_PARTY_NOTIFYEXP);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_CHANGEITEMGETPATTERN,			DoMsg_GAMEMSG_RESPONSE_PARTY_CHANGEITEMGETPATTERN);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_NOTIFYITEMGET,					DoMsg_GAMEMSG_RESPONSE_PARTY_NOTIFYITEMGET);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_PARTYUSERPOS,					DoMsg_GAMEMSG_RESPONSE_PARTY_PARTYUSERPOS);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_NOTIFYLEVELUP,					DoMsg_GAMEMSG_RESPONSE_PARTY_NOTIFYLEVELUP);

		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_WANTJOIN,						DoMsg_GAMEMSG_RESPONSE_PARTY_WANTJOIN);
		ClientMessageMap(GAMEMSG_RESPONSE_PARTY_WANTJOINRESULT,					DoMsg_GAMEMSG_RESPONSE_PARTY_WANTJOINRESULT);
		//----------------------------------------
		// 친구
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_FRIENDADD,							DoMsg_GAMEMSG_RESPONSE_FRIENDADD);
		ClientMessageMap(GAMEMSG_RESPONSE_FRIENDDEL,							DoMsg_GAMEMSG_RESPONSE_FRIENDDEL);
		ClientMessageMap(GAMEMSG_RESPONSE_FRIENDADDACCEPT,						DoMsg_GAMEMSG_RESPONSE_FRIENDADDACCEPT);
		ClientMessageMap(GAMEMSG_RESPONSE_FRIENDLOGIN,							DoMsg_GAMEMSG_RESPONSE_FRIENDLOGIN);
		ClientMessageMap(GAMEMSG_RESPONSE_FRIENDLOGOUT,							DoMsg_GAMEMSG_RESPONSE_FRIENDLOGOUT);
		ClientMessageMap(GAMEMSG_RESPONSE_FRIENDLIST,							DoMsg_GAMEMSG_RESPONSE_FRIENDLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_FRIENDMEMO,							DoMsg_GAMEMSG_RESPONSE_FRIENDMEMO);
		ClientMessageMap(GAMEMSG_RESPONSE_FRIENDMEMOSET,						DoMsg_GAMEMSG_RESPONSE_FRIENDMEMOSET);
		ClientMessageMap(GAMEMSG_RESPONSE_FRIENDCHANGEGROUP,					DoMsg_GAMEMSG_RESPONSE_FRIENDCHANGEGROUP);
		ClientMessageMap(GAMEMSG_RESPONSE_FRIENDCHANGEGROUPNAME,				DoMsg_GAMEMSG_RESPONSE_FRIENDCHANGEGROUPNAME);
		ClientMessageMap(GAMEMSG_RESPONSE_FRIENDALLLIST,						DoMsg_GAMEMSG_RESPONSE_FRIENDALLLIST);		

		//----------------------------------------
		// 투표
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_VOTEKINGAVAILABLE,					DoMsg_GAMEMSG_RESPONSE_VOTEKINGAVAILABLE);
		ClientMessageMap(GAMEMSG_RESPONSE_VOTEKINGSELECTION,					DoMsg_GAMEMSG_RESPONSE_VOTEKINGSELECTION);
		ClientMessageMap(GAMEMSG_RESPONSE_VOTEKINGAGGREGATE,					DoMsg_GAMEMSG_RESPONSE_VOTEKINGAGGREGATE);
		ClientMessageMap(GAMEMSG_RESPONSE_STARTELECTIONSTUMP,					DoMsg_GAMEMSG_RESPONSE_STARTELECTIONSTUMP);
		ClientMessageMap(GAMEMSG_RESPONSE_ENDELECTIONSTUMP,						DoMsg_GAMEMSG_RESPONSE_ENDELECTIONSTUMP);
		ClientMessageMap(GAMEMSG_RESPONSE_STARTVOTESTATUS,						DoMsg_GAMEMSG_RESPONSE_STARTVOTESTATUS);
		ClientMessageMap(GAMEMSG_RESPONSE_VOTESTATUS,							DoMsg_GAMEMSG_RESPONSE_VOTESTATUS);

		//----------------------------------------
		// DailyQuest
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUESTLIST,						DoMsg_GAMEMSG_RESPONSE_DAILYQUESTLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUESTSELECT,						DoMsg_GAMEMSG_RESPONSE_DAILYQUESTSELECT);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUESTSITUATION,					DoMsg_GAMEMSG_RESPONSE_DAILYQUESTSITUATION);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUESTCHANGE,						DoMsg_GAMEMSG_RESPONSE_DAILYQUESTCHANGE);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUESTEND,						DoMsg_GAMEMSG_RESPONSE_DAILYQUESTEND);
		//----------------------------------------
		// DailyQuest2
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUEST2LIST,						DoMsg_GAMEMSG_RESPONSE_DAILYQUEST2LIST);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUEST2SELECT,					DoMsg_GAMEMSG_RESPONSE_DAILYQUEST2SELECT);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUEST2SITUATION,					DoMsg_GAMEMSG_RESPONSE_DAILYQUEST2SITUATION);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUEST2CHANGE,					DoMsg_GAMEMSG_RESPONSE_DAILYQUEST2CHANGE);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUEST2END,						DoMsg_GAMEMSG_RESPONSE_DAILYQUEST2END);
		//----------------------------------------
		// DailyQuest3
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUEST3LIST,						DoMsg_GAMEMSG_RESPONSE_DAILYQUEST3LIST);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUEST3SELECT,					DoMsg_GAMEMSG_RESPONSE_DAILYQUEST3SELECT);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUEST3SITUATION,					DoMsg_GAMEMSG_RESPONSE_DAILYQUEST3SITUATION);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUEST3CHANGE,					DoMsg_GAMEMSG_RESPONSE_DAILYQUEST3CHANGE);
		ClientMessageMap(GAMEMSG_RESPONSE_DAILYQUEST3END,						DoMsg_GAMEMSG_RESPONSE_DAILYQUEST3END);


		//---------------------------------------
		// ItemMall
		//------------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_ITEMMALLEXISTENCE,					DoMsg_GAMEMSG_RESPONSE_ITEMMALLEXISTENCE);
		ClientMessageMap(GAMEMSG_RESPONSE_ITEMMALLITEMLIST,						DoMsg_GAMEMSG_RESPONSE_ITEMMALLITEMLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_ITEMMALLGETITEM,						DoMsg_GAMEMSG_RESPONSE_ITEMMALLGETITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_NOLIMITTICKET_WARP,					DoMsg_GAMEMSG_RESPONSE_NOLIMITTICKET_WARP);
		ClientMessageMap( GAMEMSG_RESPONSE_GET_SEL_PGLIST,						DoMsg_GAMEMSG_RESPONSE_GET_SEL_PGLIST);
		ClientMessageMap( GAMEMSG_RESPONSE_GET_ITEMMALL_ITEMINFO,				DoMsg_GAMEMSG_RESPONSE_GET_ITEMMALL_ITEMINFO);
		ClientMessageMap( GAMEMSG_RESPONSE_GET_MYCASH_INFO,						DoMsg_GAMEMSG_RESPONSE_GET_MYCASH_INFO);
		ClientMessageMap( GAMEMSG_RESPONSE_ITEMMALL_BUYITEM,					DoMsg_GAMEMSG_RESPONSE_ITEMMALL_BUYITEM);
		ClientMessageMap( GAMEMSG_RESPONSE_ITEMMALL_GIFTITEM,					DoMsg_GAMEMSG_RESPONSE_ITEMMALL_GIFTITEM);
		ClientMessageMap( GAMEMSG_RESPONSE_CHECK_ACCOUNTID,						DoMsg_GAMEMSG_RESPONSE_CHECK_ACCOUNTID);
		ClientMessageMap( GAMEMSG_RESPONSE_BILLPAGE_URL,						DoMag_GAMEMSG_RESPONSE_BILLPAGE_URL);
		ClientMessageMap( GAMEMSG_RESPONSE_LOGINPAGE_URL,						DoMag_GAMEMSG_RESPONSE_LOGINPAGE_URL);
		ClientMessageMap( GAMEMSG_RESPONSE_GACHAPAGE_URL,						DoMsa_GAMEMSG_RESPONSE_GACHAPAGE_URL);
		ClientMessageMap( GAMEMSG_RESPONSE_SET_CHANGEHERO,						DoMsg_GAMEMSG_RESPONSE_SET_CHANGEHERO);


		//----------------------------------------
		// 개인상점 
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_PERSONALSHOPBANNER,					DoMsg_GAMEMSG_RESPONSE_PERSONALSHOPBANNER);
		ClientMessageMap(GAMEMSG_RESPONSE_PERSONALSHOPDATA,						DoMsg_GAMEMSG_RESPONSE_PERSONALSHOPDATA);
		ClientMessageMap(GAMEMSG_RESPONSE_STARTPERSONALSHOP,					DoMsg_GAMEMSG_RESPONSE_STARTPERSONALSHOP);
		ClientMessageMap(GAMEMSG_RESPONSE_STOPPERSONALSHOP,						DoMsg_GAMEMSG_RESPONSE_STOPPERSONALSHOP);
		ClientMessageMap(GAMEMSG_RESPONSE_UPDATEPERSONALSHOPDATA,				DoMsg_GAMEMSG_RESPONSE_UPDATEPERSONALSHOPDATA);
		ClientMessageMap(GAMEMSG_RESPONSE_BUYPERSONALSHOP,						DoMsg_GAMEMSG_RESPONSE_BUYPERSONALSHOP);
		ClientMessageMap(GAMEMSG_RESPONSE_SELLPERSONALSHOP,						DoMsg_GAMEMSG_RESPONSE_SELLPERSONALSHOP);
		ClientMessageMap( GAMEMSG_RESPONSE_SEARCHPERSONALSHOPITEM,				DoMsg_GAMEMSG_RESPONSE_SEARCHPERSONALSHOPITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_MAKEPERSONALSHOP,						DoMsg_GAMEMSG_RESPONSE_MAKEPERSONALSHOP);

		//----------------------------------------
		// 소환수 
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONFREE,							DoMsg_GAMEMSG_RESPONSE_SUMMONFREE);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONNAMECHANGE,						DoMsg_GAMEMSG_RESPONSE_SUMMONNAMECHANGE);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONINFO,							DoMsg_GAMEMSG_RESPONSE_SUMMONINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONREVIVE,							DoMsg_GAMEMSG_RESPONSE_SUMMONREVIVE);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONATTACKCHANGE,					DoMsg_GAMEMSG_RESPONSE_SUMMONATTACKCHANGE);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONEVOLVE,							DoMsg_GAMEMSG_RESPONSE_SUMMONEVOLVE);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONSCROLL,							DoMsg_GAMEMSG_RESPONSE_SUMMONSCROLL);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMON_SETAUTOHEAL,					DoMsg_GAMEMSG_RESPONSE_SUMMON_SETAUTOHEAL);
		ClientMessageMap(GAMEMSG_RESPONSE_SELECT_SUMMONCHAR,					DoMsg_GAMEMSG_RESPONSE_SELECT_SUMMONCHAR);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONUSTON,							DoMsg_GAMEMSG_RESPONSE_SELECT_SUMMONUSESTON);
		ClientMessageMap(GAMEMSG_RESPONSE_BASESUMMONINFO,						DoMsg_GAMEMSG_RESPONSE_BASESUMMONINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONSLOTIN,							DoMsg_GAMEMSG_RESPONSE_SUMMONSLOTIN);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONSLOTOUT,						DoMsg_GAMEMSG_RESPONSE_SUMMONSLOTOUT);

		ClientMessageMap(GAMEMSG_RESPONSE_SUMMON_TRANSFORM,						DoMsg_GAMEMSG_RESPONSE_SUMMON_TRANSFORM);



		//----------------------------------------
		// 여각 
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_STOCKORDERINFO,						DoMsg_GAMEMSG_RESPONSE_STOCKORDERINFO);

		//----------------------------------------
		// 우체국
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_POSTOFFICE_RECVITEMLIST,				DoMsg_GAMEMSG_RESPONSE_POSTOFFICE_RECVITEMLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_POSTOFFICE_RECVMONEYLIST,				DoMsg_GAMEMSG_RESPONSE_POSTOFFICE_RECVMONEYLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_POSTOFFICE_RECVMSGLIST,				DoMsg_GAMEMSG_RESPONSE_POSTOFFICE_RECVMSGLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_POSTOFFICE_GETRECORD,					DoMsg_GAMEMSG_RESPONSE_POSTOFFICE_GETRECORD);

		//[진성] 우체국에서 단체 메시지 보내기. => 2008-8-4
		ClientMessageMap(GAMEMSG_RESPONSE_POSTOFFICE_USER_LIST_GROUP,			DoMsg_GAMEMSG_RESPONSE_POSTOFFICE_USER_LIST_GROUP	);
		ClientMessageMap(GAMEMSG_RESPONSE_CHAR_NAME_CHECK,						DoMsg_GAMEMSG_RESPONSE_CHAR_NAME_CHECK	);

		//-------------------------------------
		// 시전 연장 하지 못 한 유저의 아이템 찾기
		//-------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_GET_SAVEUSERITEM,						DoMsg_GAMEMSG_RESPONSE_GET_SAVEUSERITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_GET_SAVEUSERITEMLIST,					DoMsg_GAMEMSG_RESPONSE_GET_SAVEUSERITEMLIST);

		//----------------------------------------
		// 시세확인 응답 데이터.
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_MARKETCONDITIONS,						DoMsg_GAMEMSG_RESPONSE_MARKETCONDITIONS);

		//----------------------------------------
		// 수렵장 
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_HUNTMONSTERFIELDLISTADD,				DoMsg_GAMEMSG_RESPONSE_HUNTMONSTERFIELDLISTADD);
		ClientMessageMap(GAMEMSG_RESPONSE_HUNTMONSTERFIELDLISTDEL,				DoMsg_GAMEMSG_RESPONSE_HUNTMONSTERFIELDLISTDEL);
		ClientMessageMap(GAMEMSG_RESPONSE_HUNTMONSTERIN,						DoMsg_GAMEMSG_RESPONSE_HUNTMONSTERIN);
		ClientMessageMap(GAMEMSG_RESPONSE_HUNTMONSTEROUT,						DoMsg_GAMEMSG_RESPONSE_HUNTMONSTEROUT);
		ClientMessageMap(GAMEMSG_RESPONSE_HUNTADDRATE,							DoMsg_GAMEMSG_RESPONSE_HUNTADDRATE);

		//----------------------------------------
		// 사복시
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_HORSEMARKET_OUTHORSE,					DoMsg_GAMEMSG_RESPONSE_HORSEMARKET_OUTHORSE);
		ClientMessageMap(GAMEMSG_RESPONSE_HORSEMARKET_MYACCOUNT,				DoMsg_GAMEMSG_RESPONSE_HORSEMARKET_MYACCOUNT);
		ClientMessageMap(GAMEMSG_RESPONSE_HORSEMARKET_ORDERLIST,				DoMsg_GAMEMSG_RESPONSE_HORSEMARKET_ORDERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_HORSEMARKET_SELLHORSE,				DoMsg_GAMEMSG_RESPONSE_HORSEMARKET_SELLHORSE);
		ClientMessageMap(GAMEMSG_RESPONSE_HORSEMARKET_BUYHORSE,					DoMsg_GAMEMSG_RESPONSE_HORSEMARKET_BUYHORSE);

		//----------------------------------------
		// 거간
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_REALESTATEMARKET_CANCELORDER,			DoMsg_GAMEMSG_RESPONSE_REALESTATEMARKET_CANCELORDER);
		ClientMessageMap(GAMEMSG_RESPONSE_REALESTATEMARKET_MYORDER,				DoMsg_GAMEMSG_RESPONSE_REALESTATEMARKET_MYORDER);
		ClientMessageMap(GAMEMSG_RESPONSE_REALESTATEMARKET_ORDERLIST,			DoMsg_GAMEMSG_RESPONSE_REALESTATEMARKET_ORDERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_REALESTATEMARKET_SELL,				DoMsg_GAMEMSG_RESPONSE_REALESTATEMARKET_SELL);
		ClientMessageMap(GAMEMSG_RESPONSE_REALESTATEMARKET_BUY,					DoMsg_GAMEMSG_RESPONSE_REALESTATEMARKET_BUY);
		ClientMessageMap(GAMEMSG_RESPONSE_REALESTATEMARKET_DETAILINFO,			DoMsg_GAMEMSG_RESPONSE_REALESTATEMARKET_DETAILINFO);

		//----------------------------------------
		// 장예원
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONMARKET_CANCELORDER,				DoMsg_GAMEMSG_RESPONSE_SUMMONMARKET_CANCELORDER);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONMARKET_MYORDER,					DoMsg_GAMEMSG_RESPONSE_SUMMONMARKET_MYORDER);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONMARKET_ORDERLIST,				DoMsg_GAMEMSG_RESPONSE_SUMMONMARKET_ORDERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONMARKET_SELL,					DoMsg_GAMEMSG_RESPONSE_SUMMONMARKET_SELL);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONMARKET_BUY,						DoMsg_GAMEMSG_RESPONSE_SUMMONMARKET_BUY);

		//----------------------------------------
		// 비변사
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONHEROMARKET_CANCELORDER,			DoMsg_GAMEMSG_RESPONSE_SUMMONHEROMARKET_CANCELORDER);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONHEROMARKET_MYORDER,				DoMsg_GAMEMSG_RESPONSE_SUMMONHEROMARKET_MYORDER);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONHEROMARKET_ORDERLIST,			DoMsg_GAMEMSG_RESPONSE_SUMMONHEROMARKET_ORDERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONHEROMARKET_SELL,				DoMsg_GAMEMSG_RESPONSE_SUMMONHEROMARKET_SELL);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONHEROMARKET_BUY,					DoMsg_GAMEMSG_RESPONSE_SUMMONHEROMARKET_BUY);

		//----------------------------------------
		// 농장
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_LAND_UNITLIST,						DoMsg_GAMEMSG_RESPONSE_LAND_UNITLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_LAND_UNITDETAIL,						DoMsg_GAMEMSG_RESPONSE_LAND_UNITDETAIL);
		ClientMessageMap(GAMEMSG_RESPONSE_LAND_APPLYERLIST,						DoMsg_GAMEMSG_RESPONSE_LAND_APPLYERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_LAND_RENT,							DoMsg_GAMEMSG_RESPONSE_LAND_RENT);
		ClientMessageMap(GAMEMSG_RESPONSE_LAND_DELAPPLYER,						DoMsg_GAMEMSG_RESPONSE_LAND_DELAPPLYER);

		//----------------------------------------
		// 광산
		//----------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_MINE_UNITLIST,						DoMsg_GAMEMSG_RESPONSE_MINE_UNITLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_MINE_UNITDETAIL,						DoMsg_GAMEMSG_RESPONSE_MINE_UNITDETAIL);
		ClientMessageMap(GAMEMSG_RESPONSE_MINE_APPLYERLIST,						DoMsg_GAMEMSG_RESPONSE_MINE_APPLYERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_MINE_RENT,							DoMsg_GAMEMSG_RESPONSE_MINE_RENT);
		ClientMessageMap(GAMEMSG_RESPONSE_MINE_DELAPPLYER,						DoMsg_GAMEMSG_RESPONSE_MINE_DELAPPLYER);

		//----------------------------------------
		// 내자시
		//----------------------------------------
		//#if defined(_LEON_FEAST_EFFECT)
		ClientMessageMap(GAMEMSG_RESPONSE_FEAST_USEEFFECT,						DoMsg_GAMEMSG_RESPONSE_FEAST_USEEFFECT);
		//#endif
		// [진성] 파티홀. 		
		ClientMessageMap(GAMEMSG_RESPONSE_PARTYHALL_TOTAL_INFO,					DoMsg_GAMEMSG_RESPONSE_PARTYHALL_TOTAL_INFO);					// 파티장 정보.			=> 2008. 3. 15
		ClientMessageMap(GAMEMSG_RESPONSE_PARTYHALL_RESERVATION,				DoMsg_GAMEMSG_RESPONSE_PARTYHALL_RESERVATION);					// 파티장 예약.			=> 2008. 3. 15
		ClientMessageMap(GAMEMSG_RESPONSE_PARTYHALL_ADD_PRESENT,				DoMsg_GAMEMSG_RESPONSE_PARTYHALL_ADD_PRESENT);					// 파티장 선물 등록.	=> 2008. 3. 15
		ClientMessageMap(GAMEMSG_RESPONSE_PARTYHALL_GET_COSTUME,				DoMsg_GAMEMSG_RESPONSE_PARTYHALL_GET_COSTUME);					// 옷 얻기.				=> 2008. 3. 12
		ClientMessageMap(GAMEMSG_RESPONSE_PARTYHALL_ENTRANCE_APPLICATION,		DoMsg_GAMEMSG_RESPONSE_PARTYHALL_ENTRANCE_APPLICATION);			// 입장신청				=> 2008. 3. 14
		ClientMessageMap(GAMEMSG_RESPONSE_PARTYHALL_ENTRANCE_APPLICATION_LIST,	DoMsg_GAMEMSG_RESPONSE_PARTYHALL_ENTRANCE_APPLICATION_LIST);	// 입장신청 리스트. 	=> 2008. 3. 12
		ClientMessageMap(GAMEMSG_RESPONSE_PARTYHALL_ADD_DECORATION,				DoMsg_GAMEMSG_RESPONSE_PARTYHALL_ADD_DECORATION);				// 장식품 추가.			=> 2008. 3. 12
		ClientMessageMap(GAMEMSG_RESPONSE_PARTYHALL_GIVEITEM,					DoMsg_GAMEMSG_RESPONSE_PARTYHALL_GIVEITEM);						// 장식품 추가.			=> 2008. 3. 12
		ClientMessageMap(GAMEMSG_RESPONSE_PARTYHALL_USEEFFECT,					DoMsg_GAMEMSG_RESPONSE_PARTYHALL_USEEFFECT);					// 폭죽.				=> 2008. 3. 28

		ClientMessageMap(GAMEMSG_RESPONSE_PARTYHALL_DECORATION_LIST,			DoMsg_GAMEMSG_RESPONSE_PARTYHALL_DECORATION_LIST);				// 장식물 리스트.		=> 2008. 3. 28

		//---------------------------------------
		// 주주총회
		//---------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_GENERALMEETING_INFO,					DoMsg_GAMEMSG_RESPONSE_GENERALMEETING_INFO);
		ClientMessageMap(GAMEMSG_RESPONSE_GENERALMEETING_SUGGEST,				DoMsg_GAMEMSG_RESPONSE_GENERALMEETING_SUGGEST);
		ClientMessageMap(GAMEMSG_RESPONSE_GENERALMEETING_VOTE,					DoMsg_GAMEMSG_RESPONSE_GENERALMEETING_VOTE);
		ClientMessageMap(GAMEMSG_RESPONSE_GENERALMEETING_ACCEPTCANDIDATE,		DoMsg_GAMEMSG_RESPONSE_GENERALMEETING_ACCEPTCANDIDATE);
		ClientMessageMap(GAMEMSG_RESPONSE_SETVILLAGEUPGRADE,					DoMsg_GAMEMSG_RESPONSE_SETVILLAGEUPGRADE);
		ClientMessageMap(GAMEMSG_NOTICE_GENERALMEETING,							DoMsg_GAMEMSG_NOTICE_GENERALMEETING);


		ClientMessageMap(GAMEMSG_RESPONSE_STOCKOFFERINGINFO,					DoMsg_GAMEMSG_RESPONSE_STOCKOFFERINGINFO);

		ClientMessageMap(GAMEMSG_RESPONSE_EXCHANGESTOCK,						DoMsg_GAMEMSG_RESPONSE_EXCHANGESTOCK);

		//---------------------------------------
		// 시스템 
		//---------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_BOSSAPPEAR,							DoMsg_GAMEMSG_RESPONSE_BOSSAPPEAR);
		ClientMessageMap(GAMEMSG_RESPONSE_PERSONALSHOPMAKEINFO,					DoMsg_GAMEMSG_RESPONSE_PERSONALSHOPMAKEINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_NPCPOS,								DoMsg_GAMEMSG_RESPONSE_NPCPOS);
		ClientMessageMap(GAMEMSG_RESPONSE_USERNUM,								DoMsg_GAMEMSG_RESPONSE_USERNUM);
		ClientMessageMap(GAMEMSG_RESPONSE_SECRETCHATRESULT,						DoMsg_GAMEMSG_RESPONSE_SECRETCHATRESULT);
		ClientMessageMap(GAMEMSG_RESPONSE_USERCHARINFO,							DoMsg_GAMEMSG_RESPONSE_USERCHARINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_USERCHARITEMINFO,						DoMsg_GAMEMSG_RESPONSE_USERCHARITEMINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_USERCHARITEMINFO2,					DoMsg_GAMEMSG_RESPONSE_USERCHARITEMINFO2);
		ClientMessageMap(GAMEMSG_RESPONSE_ACCOUNTINFO,							DoMsg_GAMEMSG_RESPONSE_ACCOUNTINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_PRODUCTPRICE,							DoMsg_GAMEMSG_RESPONSE_PRODUCTPRICE);
		ClientMessageMap(GAMEMSG_RESPONSE_GMGIVEMONEY,							DoMsg_GAMEMSG_RESPONSE_GMGIVEMONEY);
		ClientMessageMap(GAMEMSG_RESPONSE_NEWS,									DoMsg_GAMEMSG_RESPONSE_NEWS);
		ClientMessageMap(GAMEMSG_RESPONSE_ASKLIST,								DoMsg_GAMEMSG_RESPONSE_ASKLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_ENEMYCAPTURE,							DoMsg_GAMEMSG_RESPONSE_ENEMYCAPTURE);
		ClientMessageMap(GAMEMSG_RESPONSE_ENEMYCAPTUREALL,						DoMsg_GAMEMSG_RESPONSE_ENEMYCAPTUREALL);
		ClientMessageMap(GAMEMSG_RESPONSE_NOTICELOGIN,							DoMsg_GAMEMSG_RESPONSE_NOTICELOGIN);
		ClientMessageMap(GAMEMSG_RESPONSE_SKILLMASTERLIST,						DoMsg_GAMEMSG_RESPONSE_SKILLMASTERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_VILLAGEDETAILINFO,					DoMsg_GAMEMSG_RESPONSE_VILLAGEDETAILINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_RAREITEMMADE,							DoMsg_GAMEMSG_RESPONSE_RAREITEMMADE);
		ClientMessageMap(GAMEMSG_RESPONSE_RECOMMENDREWARD,						DoMsg_GAMEMSG_RESPONSE_RECOMMENDREWARD);
		ClientMessageMap(GAMEMSG_RESPONSE_FAMELEVELREWARD,						DoMsg_GAMEMSG_RESPONSE_FAMELEVELREWARD);
		ClientMessageMap(GAMEMSG_RESPONSE_BIGWARITEM,							DoMsg_GAMEMSG_RESPONSE_BIGWARITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_GOODHORSE,							DoMsg_GAMEMSG_RESPONSE_GOODHORSE);

		ClientMessageMap(GAMEMSG_RESPONSE_VILLAGEGENERALMEETING,				DoMsg_GAMEMSG_RESPONSE_VILLAGEGENERALMEETING);	//[추가 : 황진성 2008. 2. 21 => 마을 주주총회 발동 관련 정보 통보.]
		ClientMessageMap(GAMEMSG_RESPONSE_CRYSTALITEMINFO,						DoMsg_GAMEMSG_RESPONSE_CRYSTALITEMINFO);		//KHY - 0421 - 결정체 정보를 클라이언트로 보낸다.

		//KHY - 1001 - 기승동물 5마리 보유 수정.
		ClientMessageMap(GAMEMSG_RESPONSE_NOADDHORSE,							DoMsg_GAMEMSG_RESPONSE_NOADDHORSE);		
		ClientMessageMap(GAMEMSG_RESPONSE_HIGHSUMMON,							DoMsg_GAMEMSG_RESPONSE_HIGHSUMMON);
		ClientMessageMap(GAMEMSG_RESPONSE_USERLEVELUP,							DoMsg_GAMEMSG_RESPONSE_USERLEVELUP);
		ClientMessageMap(GAMEMSG_RESPONSE_CHAT,									DoMsg_GAMEMSG_RESPONSE_CHAT);
		ClientMessageMap(GAMEMSG_RESPONSE_MAKESECRETCHATCHANNEL,				DoMsg_GAMEMSG_RESPONSE_MAKESECRETCHATCHANNEL);
		ClientMessageMap(GAMEMSG_RESPONSE_ACCEPTSECRETCHATCHANNEL,				DoMsg_GAMEMSG_RESPONSE_ACCEPTSECRETCHATCHANNEL);
		ClientMessageMap(GAMEMSG_RESPONSE_SERVERINFO,							DoMsg_GAMEMSG_RESPONSE_SERVERINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_WARVILLAGE,							DoMsg_GAMEMSG_RESPONSE_WARVILLAGE);
		ClientMessageMap(GAMEMSG_RESPONSE_BONUSTIME,							DoMsg_GAMEMSG_RESPONSE_BONUSTIME);
		ClientMessageMap(GAMEMSG_RESPONSE_HUNTINGINFO,							DoMsg_GAMEMSG_RESPONSE_HUNTINGINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_HUNTINGREWARD,						DoMsg_GAMEMSG_RESPONSE_HUNTINGREWARD);
		ClientMessageMap(GAMEMSG_RESPONSE_GOGUINFO,								DoMsg_GAMEMSG_RESPONSE_GOGUINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_GOGUREWARD,							DoMsg_GAMEMSG_RESPONSE_GOGUREWARD);
		ClientMessageMap(GAMEMSG_RESPONSE_OSAKAINFO,							DoMsg_GAMEMSG_RESPONSE_OSAKAINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_OSAKAREWARD,							DoMsg_GAMEMSG_RESPONSE_OSAKAREWARD);
		ClientMessageMap(GAMEMSG_RESPONSE_KANGHWADOINFO,						DoMsg_GAMEMSG_RESPONSE_KANGHWADOINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_KANGHWADOREWARD,						DoMsg_GAMEMSG_RESPONSE_KANGHWADOREWARD);

		// 육조판서 
		ClientMessageMap(GAMEMSG_RESPONSE_GETBYUNGZOINFO,						DoMsg_GAMEMSG_RESPONSE_GETBYUNGZOINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_GETGONGZOINFO,						DoMsg_GAMEMSG_RESPONSE_GETGONGZOINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_GETHYUNGZOINFO,						DoMsg_GAMEMSG_RESPONSE_GETHYUNGZOINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_GETHOZOINFO,							DoMsg_GAMEMSG_RESPONSE_GETHOZOINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_GETIZOINFO,							DoMsg_GAMEMSG_RESPONSE_GETIZOINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_GETYEZOINFO,							DoMsg_GAMEMSG_RESPONSE_GETYEZOINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_GETGOONZUINFO,						DoMsg_GAMEMSG_RESPONSE_GETGOONZUINFO);

		ClientMessageMap(GAMEMSG_RESPONSE_GOONZU_GETBONUSTIME,					DoMsg_GAMEMSG_RESPONSE_GOONZU_GETBONUSTIME);		

		ClientMessageMap(GAMEMSG_RESPONSE_GETANGELAPPLYERLIST,					DoMsg_GAMEMSG_RESPONSE_GETANGELAPPLYERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_GETANGELLIST,							DoMsg_GAMEMSG_RESPONSE_GETANGELLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_SETANGELAPPLYER,						DoMsg_GAMEMSG_RESPONSE_SETANGELAPPLYER);
		ClientMessageMap(GAMEMSG_RESPONSE_SETANGEL,								DoMsg_GAMEMSG_RESPONSE_SETANGEL);
		ClientMessageMap(GAMEMSG_RESPONSE_GETPOLICELIST,						DoMsg_GAMEMSG_RESPONSE_GETPOLICELIST);
		ClientMessageMap(GAMEMSG_RESPONSE_SETPOLICE,							DoMsg_GAMEMSG_RESPONSE_SETPOLICE);
		ClientMessageMap(GAMEMSG_RESPONSE_GETCRIMINALLIST,						DoMsg_GAMEMSG_RESPONSE_GETCRIMINALLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_SETCRIMINAL,							DoMsg_GAMEMSG_RESPONSE_SETCRIMINAL);
		ClientMessageMap(GAMEMSG_RESPONSE_GETCHANGEDNAME,						DoMsg_GAMEMSG_RESPONSE_GETCHANGEDNAME);

		ClientMessageMap( GAMEMSG_RESPONSE_ENCHANTITEMSTARTOREND,				DoMsg_GAMEMSG_RESPONSE_ENCHANTITEMSTARTOREND);
		ClientMessageMap( GAMEMSG_RESPONSE_ENCHANTOTHERSHOW,					DoMsg_GAMEMSG_RESPONSE_ENCHANTOTHERSHOW);
		ClientMessageMap( GAMEMSG_RESPONSE_ENCHANTOTHERPRICE,					DoMsg_GAMEMSG_RESPONSE_ENCHANTOTHERPRICE);


		// 자동 사냥
		ClientMessageMap(GAMEMSG_RESPONSE_AUTOHUNTING,							DoMsg_GAMEMSG_RESPONSE_AUTOHUNTING);
		ClientMessageMap(GAMEMSG_RESPONSE_AUTOHUNTING_ASK,						DoMsg_GAMEMSG_RESPONSE_AUTOHUNTING_ASK);
		ClientMessageMap(GAMEMSG_RESPONSE_AUTOHUNTING_TIMEUPDATE,				DoMsg_GAMEMSG_RESPONSE_AUTOHUNTING_TIMEUPDATE);

		ClientMessageMap(GAMEMSG_RESPONSE_SERVEREVENTINFO,						DoMsg_GAMEMSG_RESPONSE_SERVEREVENTINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_STOCKBIDVILLAGELIST,					DoMsg_GAMEMSG_RESPONSE_STOCKBIDVILLAGELIST);
		ClientMessageMap(GAMEMSG_RESPONSE_STOCKBIDDERLIST,						DoMsg_GAMEMSG_RESPONSE_STOCKBIDDERLIST);

		ClientMessageMap(GAMEMSG_RESPONSE_STOCKDISTRIBUTIONSET,					DoMsg_GAMEMSG_RESPONSE_STOCKDISTRIBUTIONSET);	// 주식 공모를 유저에게 알림
		ClientMessageMap(GAMEMSG_RESPONSE_STOCKDISTRIBUTIONORDER,				DoMsg_GAMEMSG_RESPONSE_STOCKDISTRIBUTIONORDER);	// 주식 공모 참여 결과를 반환

		ClientMessageMap(GAMEMSG_RESPONSE_LIST_DELETEALL,						DoMsg_GAMEMSG_RESPONSE_LIST_DELETEALL);
		ClientMessageMap(GAMEMSG_RESPONSE_LIST_DELITEM,							DoMsg_GAMEMSG_RESPONSE_LIST_DELITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_PERSONAL_LOG,							DoMsg_GAMEMSG_RESPONSE_PERSONAL_LOG);	// 운영자가 사용자의 로그를 요청한다.
		//ClientMessageMap(GAMEMSG_RESPONSE_ITEMINFOGET,//DoMsg_GAMEMSG_RESPONSE_ITEMINFOGET);
		ClientMessageMap(GAMEMSG_RESPONSE_BLACKARMYAPPLY,						DoMsg_GAMEMSG_RESPONSE_BLACKARMYAPPLY);
		ClientMessageMap(GAMEMSG_RESPONSE_BLACKARMYWAR,							DoMsg_GAMEMSG_RESPONSE_BLACKARMYWAR);
		ClientMessageMap(GAMEMSG_RESPONSE_BLACKARMY_RANKINFO,					DoMsg_GAMEMSG_RESPONSE_BLACKARMY_RANKINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_BLACKARMY_MVPEFFECT,					DoMsg_GAMEMSG_RESPONSE_BLACKARMY_MVPEFFECT);
		ClientMessageMap(GAMEMSG_RESPONSE_BLACKWAR,								DoMsg_GAMEMSG_RESPONSE_BLACKWAR);

		ClientMessageMap(GAMEMSG_RESPONSE_DISASSEMBLEITEM,						DoMsg_GAMEMSG_RESPONSE_DISASSEMBLEITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_DISASSEMBLEITEM_LIST,					DoMsg_GAMEMSG_RESPONSE_DISASSEMBLEITEM_LIST);
		ClientMessageMap(GAMEMSG_RESPONSE_DISASSEMBLEITEM_RECIEVE,				DoMsg_GAMEMSG_RESPONSE_DISASSEMBLEITEM_RECIEVE);
		ClientMessageMap(GAMEMSG_RESPONSE_OPENTREASUREBOX,						DoMsg_GAMEMSG_RESPONSE_OPENTREASUREBOX );
		ClientMessageMap(GAMEMSG_RESPONSE_KINGGURIINFO,							DoMsg_GAMEMSG_RESPONSE_KINGGURIINFO );
		ClientMessageMap(GAMEMSG_RESPONSE_SANTARACCOONINFO,						DoMsg_GAMEMSG_RESPONSE_SANTARACCOONINFO );	//[추가 : 황진성 2007. 11. 29 산타라쿤 이벤트 메시지.]
		ClientMessageMap(GAMEMSG_RESPONSE_KITERACCOONINFO,						DoMsg_GAMEMSG_RESPONSE_KITERACCOONINFO ); // [설날 이벤트 2008.01.13 추가]
		ClientMessageMap(GAMEMSG_RESPONSE_RAREITEMFROMTREASUREBOX,				DoMsg_GAMEMSG_RESPONSE_RAREITEMFROMTREASUREBOX ); // [영훈] 랜덤박스에서 레어아이템 획득


		//-----------------------------------
		// Item
		//-----------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_ITEMDROP,								DoMsg_GAMEMSG_RESPONSE_ITEMDROP);
		ClientMessageMap(GAMEMSG_RESPONSE_NPCREPAIRPRICE,						DoMsg_GAMEMSG_RESPONSE_NPCREPAIRPRICE);
		ClientMessageMap(GAMEMSG_RESPONSE_MAKEITEMSWITCH,						DoMsg_GAMEMSG_RESPONSE_MAKEITEMSWITCH);
		ClientMessageMap(GAMEMSG_RESPONSE_EXCHANGEWEAPON,						DoMsg_GAMEMSG_RESPONSE_EXCHANGEWEAPON);
		ClientMessageMap(GAMEMSG_RESPONSE_EXCHANGECLOTHES,						DoMsg_GAMEMSG_RESPONSE_EXCHANGECLOTHES);
		ClientMessageMap(GAMEMSG_RESPONSE_UPGRADEITEM,							DoMsg_GAMEMSG_RESPONSE_UPGRADEITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_PERFORMANCEUPGRADEITEM,				DoMsg_GAMEMSG_RESPONSE_PERFORMANCEUPGRADEITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_GIFTNT,								DoMsg_GAMEMSG_RESPONSE_GIFTNT);
		ClientMessageMap(GAMEMSG_RESPONSE_WHISPERCHAT_REJECT,					DoMsg_GAMEMSG_RESPONSE_WHISPERCHAT_REJECT);
		ClientMessageMap(GAMEMSG_RESPONSE_PRIVATETRADE_REJECT,					DoMsg_GAMEMSG_RESPONSE_PRIVATETRADE_REJECT);
		ClientMessageMap(GAMEMSG_RESPONSE_MAKEITEMDLG,							DoMsg_GAMEMSG_RESPONSE_MAKEITEMDLG);
		ClientMessageMap(GAMEMSG_RESPONSE_ENCHANTITEMDLG,						DoMsg_GAMEMSG_RESPONSE_ENCHANTITEMDLG);
		ClientMessageMap(GAMEMSG_RESPONSE_PERSONMAKEITEMSWITCH,					DoMsg_GAMEMSG_RESPONSE_PERSONMAKEITEMSWITCH);

		ClientMessageMap(GAMEMSG_RESPONSE_ISSKILLITEM,							DoMsg_GAMEMSG_RESPONSE_ISSKILLITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_PREMIUM_INFO,							DoMsg_GAMEMSG_RESPONSE_PREMIUM_INFO);
		ClientMessageMap(GAMEMSG_RESPONSE_ANOTHERAUTH,							DoMsg_GAMEMSG_RESPONSE_ANOTHERAUTH);
		ClientMessageMap(GAMEMSG_RESPONSE_NOTGAMEPOTAUTH,						DoMsg_GAMEMSG_RESPONSE_NOTGAMEPOTAUTH);
		ClientMessageMap(GAMEMSG_RESPONSE_CANNOTLOGIN_AGE,						DoMsg_GAMEMSG_RESPONSE_CANNOTLOGIN_AGE);
		ClientMessageMap(GAMEMSG_RESPONSE_CANNOTLOGIN_ERROR,					DoMsg_GAMEMSG_RESPONSE_CANNOTLOGIN_ERROR);		
		ClientMessageMap(GAMEMSG_RESPONSE_GAMEDISCONNECT_AGE,					DoMsg_GAMEMSG_RESPONSE_GAMEDISCONNECT_AGE);	// 게임실행중에 나이제한 체크함 (PCK - 2007.09.19)
		ClientMessageMap(GAMEMSG_RESPONSE_CHANGE_CHARNAME,						DoMsg_GAMEMSG_RESPONSE_CHANGE_CHARNAME);
		ClientMessageMap(GAMEMSG_RESPONSE_CHANGE_CHARKIND,						DoMsg_GAMEMSG_RESPONSE_CHANGE_CHARKIND);
		ClientMessageMap(GAMEMSG_RESPONSE_NOTICEADMIN,							DoMsg_GAMEMSG_RESPONSE_NOTICEADMIN);
		ClientMessageMap(GAMEMSG_RESPONSE_INSTANCEMAPINFO,						DoMsg_GAMEMSG_RESPONSE_INSTANCEMAPINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMONCHANGEITEM,						DoMsg_GAMEMSG_RESPONSE_SUMMONCHANGEITEM);

		//#if defined(_CITYHALL_BANKRUPTCY)
		ClientMessageMap(GAMEMSG_RESPONSE_NOTIFYCLIENTABOUTCITYHALLSTATE,		DoMsg_GAMEMSG_RESPONSE_NOTIFYCLIENTABOUTCITYHALLSTATE);
		//#endif

		ClientMessageMap(GAMEMSG_RESPONSE_HOPETOQUIT,							DoMsg_GAMEMSG_RESPONSE_HOPETOQUIT);
		ClientMessageMap(GAMEMSG_RESPONSE_HOPETOFRONT,							DoMsg_GAMEMSG_RESPONSE_HOPETOFRONT);

		ClientMessageMap(GAMEMSG_RESPONSE_GENERALMEETINGLETTER,					DoMsg_GAMEMSG_RESPONSE_GENERALMEETINGLETTER);
		ClientMessageMap(GAMEMSG_RESPONSE_GENERALMEETING_PARTICIPATE,			DoMsg_GAMEMSG_RESPONSE_GENERALMEETING_PARTICIPATE);

		ClientMessageMap(GAMEMSG_RESPONSE_GENERALMEETING_CHAT,					DoMsg_GAMEMSG_RESPONSE_GENERALMEETING_CHAT);
		ClientMessageMap(GAMEMSG_RESPONSE_GENERALMEETING_CHATJOIN,				DoMsg_GAMEMSG_RESPONSE_GENERALMEETING_CHATJOIN);
		ClientMessageMap(GAMEMSG_RESPONSE_GENERALMEETING_CHATOUT,				DoMsg_GAMEMSG_RESPONSE_GENERALMEETING_CHATOUT);

		ClientMessageMap( GAMEMSG_RESPONSE_SETWORLDMONEY_BUYDLG,				DoMsg_GAMEMSG_RESPONSE_SETWORLDMONEY_BUYDLG);
		ClientMessageMap( GAMEMSG_RESPONSE_DISTRIBUTION_WORLDMONEY,				DoMsg_GAMEMSG_RESPONSE_DISTRIBUTION_WORLDMONEY);
		ClientMessageMap( GAMEMSG_RESPONSE_WORLDMONEY_TRADELIST,				DoMsg_GAMEMSG_RESPONSE_WORLDMONEY_TRADELIST);
		ClientMessageMap( GAMEMSG_RESPONSE_WORLDMONEY_SELLORDER,				DoMsg_GAMEMSG_RESPONSE_WORLDMONEY_SELLORDER);
		ClientMessageMap( GAMEMSG_RESPONSE_WORLDMONEY_BUYORDER,					DoMsg_GAMEMSG_RESPONSE_WORLDMONEY_BUYORDER);
		ClientMessageMap( GAMEMSG_RESPONSE_WORLDMONEY_CANCELORDER,				DoMsg_GAMEMSG_RESPONSE_WORLDMONEY_CANCELORDER);
		ClientMessageMap( GAMEMSG_RESPONSE_WORLDMONEY_SET_CHAR,					DoMsg_GAMEMSG_RESPONSE_WORLDMONEY_SET_CHAR);

		ClientMessageMap( GAMEMSG_RESPONSE_TRADESERVER_SET_SELLORDER,			DoMsg_GAMEMSG_RESPONSE_TRADESERVER_SET_SELLORDER);
		ClientMessageMap( GAMEMSG_RESPONSE_TRADESERVER_CANCEL_SELLORDER,		DoMsg_GAMEMSG_RESPONSE_TRADESERVER_CANCEL_SELLORDER);
		ClientMessageMap( GAMEMSG_RESPONSE_TRADESERVER_SET_BUYORDER,			DoMsg_GAMEMSG_RESPONSE_TRADESERVER_SET_BUYORDER);
		ClientMessageMap( GAMEMSG_RESPONSE_TRADESERVER_GET_LISTINFO,			DoMsg_GAMEMSG_RESPONSE_TRADESERVER_GET_LISTINFO);
		ClientMessageMap( GAMEMSG_RESPONSE_TRADESERVER_GET_SELLINFO,			DoMsg_GAMEMSG_RESPONSE_TRADESERVER_GET_SELLINFO);
		ClientMessageMap( GAMEMSG_RESPONSE_TRADESERVER_GET_MYINFO,				DoMsg_GAMEMSG_RESPONSE_TRADESERVER_GET_MYINFO);
		ClientMessageMap( GAMEMSG_RESPONSE_TRADESERVER_GET_WITHDRAW_ACU,		DoMsg_GAMEMSG_RESPONSE_TRADESERVER_GET_WITHDRAW_ACU);
		ClientMessageMap( GAMEMSG_RESPONSE_TRADESERVER_GET_SAVEDACU_LIST,		DoMsg_GAMEMSG_RESPONSE_TRADESERVER_GET_SAVEDACU_LIST);

		ClientMessageMap( GAMEMSG_RESPONSE_WORLDPASSPORT_SET,					DoMsg_GAMEMSG_RESPONSE_WORLDPASSPORT_SET);
		ClientMessageMap( GAMEMSG_RESPONSE_WORLDPASSPORT_EXTEND,				DoMsg_GAMEMSG_RESPONSE_WORLDPASSPORT_EXTEND);

		ClientMessageMap( GAMEMSG_RESPONSE_COUNTRYINFO,							DoMsg_GAMEMSG_RESPONSE_COUNTRYINFO );
		ClientMessageMap( GAMEMSG_RESPONSE_USERLISTBYCOUNTRY,					DoMsg_GAMEMSG_RESPONSE_USERLISTBYCOUNTRY );
		ClientMessageMap( GAMEMSG_RESPONSE_NOTICECOUNTRYUSERMAKE,				DoMsg_GAMEMSG_RESPONSE_NOTICECOUNTRYUSERMAKE );
		ClientMessageMap( GAMEMSG_RESPONSE_LOWLEVELLIST,						DoMsg_GAMEMSG_RESPONSE_LOWLEVELLIST);
		ClientMessageMap( GAMEMSG_RESPONSE_ADDBUF,								DoMsg_GAMEMSG_RESPONSE_ADDBUF );
		ClientMessageMap( GAMEMSG_RESPONSE_DELETEBUF,							DoMsg_GAMEMSG_RESPONSE_DELETEBUF );
		ClientMessageMap( GAMEMSG_RESPONSE_SETITEMTYPEINFO,						DoMsg_GAMEMSG_RESPONSE_SETITEMTYPEINFO );
		ClientMessageMap( GAMEMSG_RESPONSE_MYPUCHIKOMIURL,						DoMsg_GAMEMSG_RESPONSE_MYPUCHIKOMIURL );
		ClientMessageMap( GAMEMSG_RESPONSE_USERPUCHIKOMIURL,					DoMsg_GAMEMSG_RESPONSE_USERPUCHIKOMIURL );
		ClientMessageMap( GAMEMSG_RESPONSE_SETEMOTICON,							DoMsg_GAMEMSG_RESPONSE_SETEMOTICON );
		ClientMessageMap( GAMEMSG_RESPONSE_GAME_GUARD_AUTH,						DoMSg_GAMEMSG_RESPONSE_GAME_GUARD_AUTH );

		// Guild
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_CREATEGUILD,					DoMsg_GAMEMSG_RESPONSE_GUILD_CREATEGUILD);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_DESTROYGUILD,					DoMsg_GAMEMSG_RESPONSE_GUILD_DESTROYGUILD);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_JOINGUILD,						DoMsg_GAMEMSG_RESPONSE_GUILD_JOINGUILD);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_CONFIRMJOINGUILD,				DoMsg_GAMEMSG_RESPONSE_GUILD_CONFIRMJOINGUILD);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_LEAVEGUILD,						DoMsg_GAMEMSG_RESPONSE_GUILD_LEAVEGUILD);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_CHANGEVILLAGE,					DoMsg_GAMEMSG_RESPONSE_GUILD_CHANGEVILLAGE);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_GETGUILDLIST,					DoMsg_GAMEMSG_RESPONSE_GUILD_GETGUILDLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_GETGUILDINFO,					DoMsg_GAMEMSG_RESPONSE_GUILD_GETGUILDINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_CONFIRMCREATEGUILD,				DoMsg_GAMEMSG_RESPONSE_GUILD_CONFIRMCREATEGUILD);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_SETSECONDMASTER,				DoMsg_GAMEMSG_RESPONSE_GUILD_SETSECONDMASTER);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_GIVEGUILDMONEY,					DoMsg_GAMEMSG_RESPONSE_GUILD_GIVEGUILDMONEY);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_SETSTRFEERATE,					DoMsg_GAMEMSG_RESPONSE_GUILD_SETSTRFEERATE);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_CHANGESTATUS,					DoMsg_GAMEMSG_RESPONSE_GUILD_CHANGESTATUS);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_SETGUILDSTATUS,					DoMsg_GAMEMSG_RESPONSE_GUILD_SETGUILDSTATUS);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_SETMARK,						DoMsg_GAMEMSG_RESPONSE_GUILD_SETMARK);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_CHANGENAME,						DoMsg_GAMEMSG_RESPONSE_GUILD_CHANGENAME);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_CHANGEMASTER,					DoMsg_GAMEMSG_RESPONSE_GUILD_CHANGEMASTER);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDWAR_RESERVELIST,					DoMsg_GAMEMSG_RESPONSE_GUILDWAR_RESERVELIST );
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDWAR_APPLYRESERVE,				DoMsg_GAMEMSG_RESPONSE_GUILDWAR_APPLYRESERVE);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDWAR_APPLYTOENEMY,				DoMsg_GAMEMSG_RESPONSE_GUILDWAR_APPLYTOENEMY );
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDWAR_START,						DoMsg_GAMEMSG_RESPONSE_GUILDWAR_START );
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDHUNTMAPWAR_START,				DoMsg_GAMEMSG_RESPONSE_GUILDHUNTMAPGUILDWAR_START );
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDWAR_END,							DoMsg_GAMEMSG_RESPONSE_GUILDWAR_END );
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDWAR_KILLPOINT,					DoMsg_GAMEMSG_RESPONSE_GUILDWAR_KILLPOINT );
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDDUNGEON_APPLYLIST,				DoMsg_GAMEMSG_RESPONSE_GUILDDUNGEON_APPLYLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDDUNGEON_APPLY,					DoMsg_GAMEMSG_RESPONSE_GUILDDUNGEON_APPLY);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDDUNGEON_STATUS,					DoMsg_GAMEMSG_RESPONSE_GUILDDUNGEON_STATUS);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_GETVILLAGELIST,					DoMsg_GAMEMSG_RESPONSE_GUILD_GETVILLAGELIST );
		ClientMessageMap(GAMEMSG_RESPONSE_GUILD_MEMBERLIST,						DoMsg_GAMEMSG_RESPONSE_GUILD_MEMBERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDWAR_RECOMMANDLIST,				DoMsg_GAMEMSG_RESPONSE_GUILDWAR_RECOMMANDLIST);
		//ClientMessageMap(GAMEMSG_RESPONSE_GUILD_CLOSEGUILD,					DoMsg_GAMEMSG_RESPONSE_GUILD_CLOSEGUILD);
		ClientMessageMap(GAMEMSG_RESPONSE_GACHAPRODUCT_LIST,					DoMsg_GAMEMSG_RESPONSE_GACHAPRODUCT_LIST);
		ClientMessageMap(GAMEMSG_RESPONSE_GACHABUY ,							DoMsg_GAMEMSG_RESPONSE_GACHABUY );

		ClientMessageMap(GAMEMSG_RESPONSE_GACHA2PRODUCT_LIST,					DoMsg_GAMEMSG_RESPONSE_GACHA2PRODUCT_LIST);

		ClientMessageMap(GAMEMSG_RESPONSE_GUILDHUNTMAPWAR_SERVERTIME,			DoMsg_GAMEMSG_RESPONSE_GuildHuntMapWar_TIEM);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDHUNTMAPWAR_HAVEMAP,				DoMsg_GAMEMSG_RESPONSE_GuildHuntMapWar_HaveMap);


		// [영훈] 이월 가챠
		ClientMessageMap(GAMEMSG_RESPONSE_CARRYOVER_GACHA_LIST,					DoMsg_GAMEMSG_RESPONSE_CARRYOVER_GACHA_LIST );
		ClientMessageMap(GAMEMSG_RESPONSE_CARRYOVER_SELECTPRODUCT_LIST,			DoMsg_GAMEMSG_RESPONSE_CARRYOVER_SELECTPRODUCT_LIST );



		ClientMessageMap(GAMEMSG_RESPONSE_MOFUMOFUEVENT_RESERVE,				DoMsg_GAMEMSG_RESPONSE_MOFUMOFUEVENT_RESERVE);
		ClientMessageMap(GAMEMSG_RESPONSE_MOFUMOFUEVENT_RESERVELIST,			DoMsg_GAMEMSG_RESPONSE_MOFUMOFUEVENT_RESERVELIST);
		ClientMessageMap(GAMEMSG_RESPONSE_MOFUMOFUEVENT_START,					DoMsg_GAMEMSG_RESPONSE_MOFUMOFUEVENT_START);
		ClientMessageMap(GAMEMSG_RESPONSE_MOFUMOFUEVENT_END,					DoMsg_GAMEMSG_RESPONSE_MOFUMOFUEVENT_END);
		ClientMessageMap(GAMEMSG_RESPONSE_MOFUMOFUEVENT_SETINFO,				DoMsg_GAMEMSG_RESPONSE_MOFUMOFUEVENT_SETINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_MOFUMOFUEVENT_INFO,					DoMsg_GAMEMSG_RESPONSE_MOFUMOFUEVENT_INFO);		
		ClientMessageMap(GAMEMSG_RESPONSE_MOFUMOFUEVENT_MAMAMOFUMOFU,			DoMsg_GAMEMSG_RESPONSE_MOFUMOFUEVENT_MAMAMOFUMOFU);


		ClientMessageMap(GAMEMSG_RESPONSE_MONSTER_ATTACK_START,					DoMsg_GAMEMSG_RESPONSE_MONSTER_ATTACK_START);	//[진성] 마을 이벤트 - 몬스터 습격.
		ClientMessageMap(GAMEMSG_RESPONSE_MONSTER_ATTACK_REWARD,				DoMsg_GAMEMSG_RESPONSE_MONSTER_ATTACK_REWARD);	//[지연] 마을 이벤트 - 몬스터 습격 - 보상 내역에 대한 통보용



		ClientMessageMap(GAMEMSG_RESPONSE_SYSTEMREWARDLIST,						DoMsg_GAMEMSG_RESPONSE_SYSTEMREWARDLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_RECIEVESYSTEMREWARD,					DoMsg_GAMEMSG_RESPONSE_RECIEVESYSTEMREWARD);
		ClientMessageMap(GAMEMSG_RESPONSE_DEMANDATTEND,							DoMsg_GAMEMSG_RESPONSE_DEMANDATTEND);
		ClientMessageMap(GAMEMSG_RESPONSE_ATTEND,								DoMsg_GAMEMSG_RESPONSE_ATTEND);

		ClientMessageMap(GAMEMSG_RESPONSE_CREATEEMPIRE,							DoMsg_GAMEMSG_RESPONSE_CREATEEMPIRE);
		ClientMessageMap(GAMEMSG_RESPONSE_DESTROYEMPIRE,						DoMsg_GAMEMSG_RESPONSE_DESTROYEMPIRE);
		ClientMessageMap(GAMEMSG_RESPONSE_INVITEEMPIRE,							DoMsg_GAMEMSG_RESPONSE_INVITEEMPIRE);
		ClientMessageMap(GAMEMSG_RESPONSE_JOINEMPIRE,							DoMsg_GAMEMSG_RESPONSE_JOINEMPIRE);
		ClientMessageMap(GAMEMSG_RESPONSE_SECEDEEMPIRE,							DoMsg_GAMEMSG_RESPONSE_SECEDEEMPIRE);
		ClientMessageMap(GAMEMSG_RESPONSE_UPDATEEMPIREINFO, 					DoMsg_GAMEMSG_RESPONSE_UPDATEEMPIREINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_EMPIREINFO,							DoMsg_GAMEMSG_RESPONSE_EMPIREINFO);
		ClientMessageMap(GAMEMSG_RESPONSE_SETEMPIREMONEY,						DoMsg_GAMEMSG_RESPONSE_SETEMPIREMONEY);

		//KHY - 1220 - 변신시스템.
		ClientMessageMap(GAMEMSG_RESPONSE_TRANSFORM,							DoMsg_GAMEMSG_RESPONSE_TRANSFORM);

		ClientMessageMap(GAMEMSG_RESPONSE_TIMEMETERRATE_UPDATE, 				DoMsg_GAMEMSG_RESPONSE_TIMEMETERRATE_UPDATE);		

		ClientMessageMap(GAMEMSG_RESPONSE_MAXSYNCRO_ATTAINMENT, 				DoMsg_GAMEMSG_RESPONSE_MAXSYNCRO_ATTAINMENT);

		ClientMessageMap(GAMEMSG_RESPONSE_TRANSFORM_LIMIT_TIME, 				DoMsg_GAMEMSG_RESPONSE_TRANSFORM_LIMIT_TIME);	//[추가 : 황진성 2008. 1. 9 => 변신한 시간이 30초가 안되서 해제 실패 메시지 띄우게.]	

		ClientMessageMap(GAMEMSG_RESPONSE_AUTOMACRO_CHECK,						DoMsg_GAMEMSG_RESPONSE_AUTOMACRO_CHECK);		//[추가 : 2007. 12. 3 => 4차오토프로그램 방지 클라이언트 메시지 추가.]
		ClientMessageMap(GAMEMSG_RESPONSE_AUTOMACRO_ON_OTHER,					DoMsg_GAMEMSG_RESPONSE_AUTOMACRO_ON_OTHER);	//[추가 : 황진성 2007. 12. 10 => 오토프로그램 발견 공지 메시지.]

		ClientMessageMap(GAMEMSG_RESPONSE_NEWYEAR_BTN,							DoMsg_GAMEMSG_RESPONSE_NEWYEAR_BTN);					//[추가 : 황진성 2007. 12. 11 => 신년 버튼 띄우라는 메시지.]

		ClientMessageMap(GAMEMSG_RESPONSE_CREATEBANKACCOUNT_CANCEL,				DoMsg_GAMEMSG_RESPONSE_CREATEBANKACCOUNT_CANCEL);	//[추가 : 황진성 2008. 1. 9 => 은행 내구도가 0이어서 계좌만들기 실패 메시지 띄우게.]	

		// [추가 : 황진성 2008. 1. 9 => 인스턴트던젼 ]
		ClientMessageMap(GAMEMSG_RESPONSE_INSTANTSDUNGEON_STATUS,				DoMsg_GAMEMSG_RESPONSE_INSTANTSDUNGEON_STATUS);	//[추가 : 황진성 2008. 1. 9 => 인던 정보]

		ClientMessageMap(GAMEMSG_RESPONSE_INSTANTSDUNGEON_RUN_STATUS,			DoMsg_GAMEMSG_RESPONSE_INSTANTSDUNGEON_RUN_STATUS);	//[추가 : 황진성 2008. 1. 10 => 인던 진행 상태정보.]

		ClientMessageMap(GAMEMSG_RESPONSE_INSTANTSDUNGEON_REWARD,				DoMsg_GAMEMSG_RESPONSE_INSTANTSDUNGEON_REWARD);	//[추가 : 황진성 2008. 1. 11 => 인던 진행 상태정보.]

		ClientMessageMap(GAMEMSG_RESPONSE_INSTANTSDUNGEON_TOP_CHANGE,			DoMsg_GAMEMSG_RESPONSE_INSTANTSDUNGEON_TOP_CHANGE);	//[추가 : 황진성 2008. 1. 11 => 인던 진행 상태정보.]


		//명예의 전당 리스트
		ClientMessageMap(GAMEMSG_RESPONSE_HOFLIST,								DoMsg_GAMEMSG_RESPONSE_HOFList);	
		//랭킹 리스트 
		ClientMessageMap(GAMEMSG_RESPONSE_RAKINGLIST,							DoMsg_GAMEMSG_RESPONSE_RakingList);	

		ClientMessageMap(GAMEMSG_REQUEST_EVENTTIME_UPDATE,						DoMsg_GAMEMSG_REQUEST_EVENTTIME_UPDATE);	

		ClientMessageMap(GAMEMSG_RESPONSE_INSTANTMAP_GATEINFO,					DoMsg_GAMEMSG_RESPONSE_INSTANTMAP_GATEINFO);

		//[추가 : 황진성 2008. 1. 23 => 흑의 군단 개편 이벤트 종료 후 결과를 알릴 메시지.]  
		ClientMessageMap(GAMEMSG_RESPONSE_BLACK_WAR_REFORM_CHAR_RESULT,			DoMsg_GAMEMSG_RESPONSE_BLACK_WAR_REFORM_CHAR_RESULT);

		//[추가 : 황진성 2008. 1. 23 => 흑의 군단 개편 이벤트 종료 후 결과를 알릴 메시지.]  
		ClientMessageMap(GAMEMSG_RESPONSE_BLACK_WAR_REFORM_VILLAGE_RESULT,		DoMsg_GAMEMSG_RESPONSE_BLACK_WAR_REFORM_VILLAGE_RESULT);

		//************************************************************************************************
		//[추가 : 황진성 2008. 1. 29 =>  공간 상자 메시지. S->C]
		ClientMessageMap(GAMEMSG_RESPONSE_SPACE_BOX_LIST,						DoMsg_GAMEMSG_RESPONSE_SPACE_BOX_LIST);

		//[추가 : 황진성 2008. 1. 29 =>  공간 상자(보물) 메시지. S->C]
		ClientMessageMap(GAMEMSG_RESPONSE_TRESURE_BOX_LIST,						DoMsg_GAMEMSG_RESPONSE_TRESURE_BOX_LIST);

		//[추가 : 황진성 2008. 1. 29 =>  공간 상자 메시지. S->C]
		ClientMessageMap(GAMEMSG_RESPONSE_KEEP_SPACE_BOX_MOVE_ITEM,				DoMsg_GAMEMSG_RESPONSE_KEEP_SPACE_BOX_MOVE_ITEM);

		//[추가 : 황진성 2008. 1. 30 =>  공간 상자 이동 메시지 처리. S->C]
		ClientMessageMap(GAMEMSG_RESPONSE_RECOVERY_SPACE_BOX_MOVE_ITEM,			DoMsg_GAMEMSG_RESPONSE_RECOVERY_SPACE_BOX_MOVE_ITEM);

		// [영훈] 공간상자 아이템 사용 추가
		ClientMessageMap(GAMEMSG_RESPONSE_USE_SPACEBOX_ITEM, 					DoMsg_GAMEMSG_RESPONSE_USE_SPACEBOX_ITEM);
		ClientMessageMap(GAMEMSG_RESPONSE_USE_TREASURE_ITEM, 					DoMsg_GAMEMSG_RESPONSE_USE_TREASURE_ITEM);

		//************************************************************************************************
		//[추가 : 황진성 2008. 2. 28 =>  아티펫트 메시지 처리. S->C]

		ClientMessageMap(GAMEMSG_RESPONSE_ARTIFACT_MIXTURE,						DoMsg_GAMEMSG_RESPONSE_ARTIFACT_MIXTURE );
		ClientMessageMap(GAMEMSG_RESPONSE_ARTIFACT_REMOVE,						DoMsg_GAMEMSG_RESPONSE_ARTIFACT_REMOVE );
		ClientMessageMap(GAMEMSG_RESPONSE_ARTIFACT_SLOT_CREATE, 				DoMsg_GAMEMSG_RESPONSE_ARTIFACT_SLOT_CREATE );

		//************************************************************************************************

		// [영훈] 서버에서 CRC체크 페킷을 보내라는 패킷이 있음
		ClientMessageMap(GAMEMSG_RESPONSE_FILECRCCHECK,							DoMsg_GAMEMSG_RESPONSE_FILECRCCHECK );
		// [영훈] 해적선 : 파티맵을 클리어 한후 보상아이템을 받았다는 메시지
		ClientMessageMap(GAMEMSG_RESPONSE_INSTANTDUNGEON_PARTY_CLEAR,			DoMsg_GAMEMSG_RESPONSE_INSTANTDUNGEON_PARTY_CLEAR);
		// [영훈] 해적선 : 해적선이 나타났다는 메시지
		ClientMessageMap(GAMEMSG_RESPONSE_PIRATESHIP_APPEAR,					DoMsg_GAMEMSG_RESPONSE_PIRATESHIP_APPEAR);
		//// [성웅] 2차 가챠 아이템 탄광소녀
		//ClientMessageMap(GAMEMSG_RESPONSE_TANGWANGGIRL,DoMsg_GAMEMSG_RESPONSE_TANWANGGIRL);
		// [춘기] 소환수 스태미너 충전
		ClientMessageMap(GAMEMSG_RESPONSE_SUMMON_STPCHARGE,						DoMsg_GAMEMSG_RESPONSE_SUMMON_STPCHARGE);
		// [영훈] 프로세스 체크하라고 S->C에게 요청함
		ClientMessageMap(GAMEMSG_RESPONSE_CHECKPROCESS,							DoMsg_GAMEMSG_RESPONSE_CHECKPROCESS);
		// [영훈] 프로세스 체크하라고 S->C에게 요청함
		ClientMessageMap(GAMEMSG_RESPONSE_CHECKPROCESS_RESULT,					DoMsg_GAMEMSG_RESPONSE_CHECKPROCESS_RESULT);

		//[진성] 호박상자 => 2008-9-16
		ClientMessageMap(GAMEMSG_RESPONSE_AMBER_BOX_LIST,						DoMsg_GAMEMSG_RESPONSE_AMBER_BOX_LIST);				// 호박상자에서 나오는 아이템 리스트.
		ClientMessageMap(GAMEMSG_RESPONSE_AMBER_BOX_SELECT_ITEM_LIST,			DoMsg_GAMEMSG_RESPONSE_AMBER_BOX_SELECT_ITEM_LIST); // 호박상자 선택 아이템 리스트.
		ClientMessageMap(GAMEMSG_RESPONSE_AMBER_BOX_SELECT_ITEM_GET,			DoMsg_GAMEMSG_RESPONSE_AMBER_BOX_SELECT_ITEM_GET);  // 호박상자 선택한 아이템 획득.

		ClientMessageMap(GAMEMSG_RESPONSE_CHAR_ROULETTE,						DoMsg_GAMEMSG_RESPONSE_CHAR_ROULETTE);

		ClientMessageMap(GAMEMSG_RESPONSE_VILLAGE_RESIDENT_INVITE,				DoMsg_GAMEMSG_RESPONSE_VILLAGE_RESIDENT_INVITE);

		ClientMessageMap(GAMEMSG_RESPONSE_PVP_FILED,							DoMsg_GAMEMSG_RESPONSE_PVP_FILED);// NEW PVP - 손성웅 2008.10.08
		// [영훈] PVP 무한리그 정보
		ClientMessageMap(GAMEMSG_RESPONSE_PVP_LEAGUE_INFOGET,					DoMsg_GAMEMSG_RESPONSE_PVP_LEAGUE_INFOGET);
		ClientMessageMap(GAMEMSG_RESPONSE_PVP_LEAGUE_UI_INFOGET,				DoMsg_GAMEMSG_RESPONSE_PVP_LEAGUE_UI_INFOGET);
		ClientMessageMap(GAMEMSG_RESPONSE_PVP_LEAGUE_BATTLE_CHANGEGRADE,		DoMsg_GAMEMSG_RESPONSE_PVP_LEAGUE_BATTLE_CHANGEGRADE);

		//[진성] 도우미 => 2008-11-05
		ClientMessageMap(GAMEMSG_RESPONSE_QUESTION_LIST_GET,					DoMsg_GAMEMSG_RESPONSE_QUESTION_LIST_GET			);
		ClientMessageMap(GAMEMSG_RESPONSE_QUESTION_CONTENTS_GET,				DoMsg_GAMEMSG_RESPONSE_QUESTION_CONTENTS_GET		);
		ClientMessageMap(GAMEMSG_RESPONSE_ADD_ANSWER,							DoMsg_GAMEMSG_RESPONSE_ADD_ANSWER					);
		ClientMessageMap(GAMEMSG_RESPONSE_ADD_ANSWER_COMPLETE,					DoMsg_GAMEMSG_RESPONSE_ADD_ANSWER_COMPLETE			);
		ClientMessageMap(GAMEMSG_RESPONSE_ADD_ANSWER_COMPLETE_RESULT,			DoMsg_GAMEMSG_RESPONSE_ADD_ANSWER_COMPLETE_RESULT	);

		ClientMessageMap(GAMEMSG_RESPONSE_SETMUTE,								DoMsg_GAMEMSG_RESPONSE_SETMUTE						);
		ClientMessageMap(GAMEMSG_RESPONSE_MUTELIST,								DoMsg_GAMEMSG_RESPONSE_MUTELIST						);

		//[춘기] 신년운세룰렛
		ClientMessageMap(GAMEMSG_RESPONSE_DIVINATION_ROULETTE,					DoMsg_GAMEMSG_RESPONSE_DIVINATION_ROULETTE			);

		//[진성] 엘릭서.
		ClientMessageMap(GAMEMSG_RESPONSE_ELIXIR_NPC_ITEM_TYPE_LIST_GET,		DoMsg_GAMEMSG_RESPONSE_ELIXIR_NPC_ITEM_TYPE_LIST_GET	);
		//[성웅] 발렌타인데이 전쟁 정보
		ClientMessageMap( GAMEMSG_RESPONSE_VALENTINE_INFO_GET,					DoMsg_GAMEMSG_RESPONSE_VALENTINE_INFO_GET );
		ClientMessageMap( GAMEMSG_RESPONSE_VALENTINE_REQUEST,					DoMsg_GAMEMSG_RESPONSE_VALENTINE_REQUEST );
		ClientMessageMap( GAMEMSG_RESPONSE_VALENTINE_RUSOLO_RUCOUPLE_ONTIME,	DoMsg_GAMEMSG_RESPONSE_VALENTINE_RUSOLO_COUPLE_ONTIME );
		ClientMessageMap( GAMEMSG_RESPONSE_VALENTINE_OPENDLG,					DoMsg_GAMEMSG_RESPONSE_VALENTINE_OPENDLG );
		ClientMessageMap( GAMEMSG_RESPONSE_VALENTINE_PRIZEGET,					DoMsg_GAMEMSG_RESPONSE_VALENTINE_PRIZEGET );

		ClientMessageMap(GAMEMSG_RESPONSE_ELIXIR_SET,							DoMsg_GAMEMSG_RESPONSE_ELIXIR_SET				);
		// [영훈] 새로운 선택상자
		ClientMessageMap( GAMEMSG_RESPONSE_NEWSELECTBOX_SELECT,					DoMsg_GAMEMSG_RESPONSE_NEWSELECTBOX_SELECT		);
		ClientMessageMap( GAMEMSG_RESPONSE_NEWSELECTBOX_GETITEM,				DoMsg_GAMEMSG_RESPONSE_NEWSELECTBOX_GETITEM		);

		//=============================================================================================
		// [진성] 통합마켓.
		//---------------------------------------------------------------------------------------------
		ClientMessageMap( GAMEMSG_RESPONSE_SELL_NEWMARKET,						DoMsg_GAMEMSG_RESPONSE_SELL_NEWMARKET	);
		ClientMessageMap( GAMEMSG_RESPONSE_BUY_NEWMARKET,						DoMsg_GAMEMSG_RESPONSE_BUY_NEWMARKET	);
		ClientMessageMap( GAMEMSG_RESPONSE_RECALL_NEWMARKET,					DoMsg_GAMEMSG_RESPONSE_RECALL_NEWMARKET	);


		ClientMessageMap( GAMEMSG_RESPONSE_NEWMARKETACCOUNT,					DoMsg_GAMEMSG_RESPONSE_NEWMARKETACCOUNT	);
		ClientMessageMap( GAMEMSG_RESPONSE_NEWMARKETITEMLIST,					DoMsg_GAMEMSG_RESPONSE_NEWMARKETITEMLIST);
		ClientMessageMap( GAMEMSG_RESPONSE_GETFROMNEWMARKET,					DoMsg_GAMEMSG_RESPONSE_GETFROMNEWMARKET	);
		ClientMessageMap( GAMEMSG_RESPONSE_NEWSELLITEM,							DoMsg_GAMEMSG_RESPONSE_NEWSELLITEM		);
		ClientMessageMap( GAMEMSG_RESPONSE_NEWBUYITEM,							DoMsg_GAMEMSG_RESPONSE_NEWSELLITEM		);
		ClientMessageMap( GAMEMSG_RESPONSE_SETNEWMARKETFEE,						DoMsg_GAMEMSG_RESPONSE_SETNEWMARKETFEE	);

		ClientMessageMap( GAMEMSG_RESPONSE_PERSONNAME_SERIALID,					DoMsg_GAMEMSG_RESPONSE_PERSONNAME_SERIALID );	//[진성] 아이템의 시리얼 아이디로 제조자 이름 얻기.

		//=============================================================================================

		//=============================================================================================
		// 길드사냥터 길드전 
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDHUNTMAPWAR_REQUEST_WARP,			DoMsg_GAMEMSG_RESPONSE_GuildHuntMapWar_Request_Warp );
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDHUNTMAPWAR_GETTOP10,				DoMsg_GAMEMSG_RESPONSE_GuildHuntMapWar_Top10);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDHUNTMAPWAR_WAREND,				DoMsg_GAMEMSG_RESPONSE_GuildHuntMapWar_END);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDHUNTMAPWAR_ADD_KILLPOINT,		DoMsg_GAMEMSG_RESPONSE_GUILDHUNTMAPGUILDWAR_ADDKILLPOINT);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDHUNTMAPWAR_MAPUSERLIST,			DoMsg_GAMEMSG_RESPONSE_GUILDHUNTMAPGUILDWAR_MAPUSERLIST);
		ClientMessageMap(GAMEMSG_RESPONSE_GUILDHUNTMAPWAR_SENDMATCHINGRESULT,	DoMsg_GAMEMSG_RESPONSE_GUILDHUNTMAPGUILDWAR_SENDMATCHINGRESULT);

		//=============================================================================================
		// [진성] 프로모터.
		ClientMessageMap(GAMEMSG_RESPONSE_PROMOTERNPC_GIVE_ITEM_GET,			DoMsg_GAMEMSG_RESPONSE_PROMOTERNPC_GIVE_ITEM_GET);      // 프로모터 관련해서 획득 가능한 아이템. 
		ClientMessageMap(GAMEMSG_RESPONSE_PROMOTER_INFO_GET,					DoMsg_GAMEMSG_RESPONSE_PROMOTER_INFO_GET);				// 프로모터 정보 
		ClientMessageMap(GAMEMSG_RESPONSE_PROMOTER_URL_GET,						DoMsg_GAMEMSG_RESPONSE_PROMOTER_URL_GET);				// 프로모터 URL
		ClientMessageMap(GAMEMSG_RESPONSE_PROMOTER_SET,							DoMsg_GAMEMSG_RESPONSE_PROMOTER_SET);					// 피추천인에게 추천인을 등록.
		ClientMessageMap(GAMEMSG_RESPONSE_RECOMMEND_INTRODUCE,					DoMsg_GAMEMSG_RESPONSE_RECOMMEND_INTRODUCE);			// 프로모터 URL
		ClientMessageMap(GAMEMSG_RESPONSE_RECOMMENDEE_INTRODUCE,				DoMsg_GAMEMSG_RESPONSE_RECOMMENDEE_INTRODUCE);			// 


		// [영훈] 결혼시스템
		ClientMessageMap(GAMEMSG_RESPONSE_PROPOSE_QUESTION,						DoMsg_GAMEMSG_RESPONSE_PROPOSE_QUESTION);	// 프로포즈 질문
		ClientMessageMap(GAMEMSG_RESPONSE_SET_MARRY,							DoMsg_GAMEMSG_RESPONSE_SET_MARRY);			// 결혼했다
		ClientMessageMap(GAMEMSG_RESPONSE_GET_MARRY_INFO,						DoMsg_GAMEMSG_RESPONSE_GET_MARRY_INFO);		// 결혼관련 정보 얻기
		ClientMessageMap(GAMEMSG_RESPONSE_MARRY_ITEMGET_SET,					DoMsg_GAMEMSG_RESPONSE_MARRY_ITEMGET_SET);	// 결혼기념일 아이템 받은날 설정
		ClientMessageMap(GAMEMSG_RESPONSE_MARRY_LOVE_SET,						DoMsg_GAMEMSG_RESPONSE_MARRY_LOVE_SET);		// 결혼관련 애정도 설정

		ClientMessageMap(GAMEMSG_RESPONSE_WEDDING_RESERVE,						DoMsg_GAMEMSG_RESPONSE_WEDDING_RESERVE);
		ClientMessageMap(GAMEMSG_RESPONSE_WEDDING_SIMPLELIST_GET,				DoMsg_GAMEMSG_RESPONSE_WEDDING_SIMPLELIST_GET);
		ClientMessageMap(GAMEMSG_RESPONSE_WEDDING_LIST_GET,						DoMsg_GAMEMSG_RESPONSE_WEDDING_LIST_GET);
		ClientMessageMap(GAMEMSG_RESPONSE_WEDDING_RESERVE_CANCEL,				DoMsg_GAMEMSG_RESPONSE_WEDDING_RESERVE_CANCEL);

		//	[종호] 통화량 조절 - 사용가능 통화량 응답 Server->Client
		ClientMessageMap(GAMEMSG_RESPONSE_BALANCECANUSECURRENCY,				DoMsg_GAMEMSG_RESPONSE_BALANCECANUSECURRENCY);			
		//	 [종호] GM이 요청한 사용가능 통화량.
		ClientMessageMap(GAMEMSG_RESPONSE_GETBALANCECANUSECURRENCY,				DoMsg_GAMEMSG_RESPONSE_GETBALANCECANUSECURRENCY);			

		// [성웅] 가족 가족등록 요청 
		ClientMessageMap(GAMEMSG_RESPONSE_FAMILY_REQUEST_ADD_CHILDREN,			DoMsg_GAMEMSG_RESPONSE_FAMILY_REQUEST_ADD_CHILDRENN);		
		ClientMessageMap(GAMEMSG_RESPONSE_FAMILY_GET_FAMILYINFO,				DoMsg_GAMEMSG_RESPONSE_GET_FAMILYINFO);		
		ClientMessageMap(GAMEMSG_RESPONSE_FAMILY_UPDATE,						DoMsg_GAMEMSG_RESPONSE_FAMILY_UPDATE);
		ClientMessageMap(GAMEMSG_RESPONSE_FAMILY_CHAT,							DoMsg_GAMEMSG_RESPONSE_FAMILY_CHAT);

		// [영훈] 수호정령
		ClientMessageMap(GAMEMSG_RESPONSE_SOULGUARD_STATUSINOUT,				DoMsg_GAMEMSG_RESPONSE_SOULGUARD_STATUSINOUT);
		ClientMessageMap(GAMEMSG_RESPONSE_SOULGUARD_FELLOWSHIPSET,				DoMsg_GAMEMSG_RESPONSE_SOULGUARD_FELLOWSHIPSET);
		ClientMessageMap(GAMEMSG_RESPONSE_SOULGUARD_CHANGENAME,					DoMsg_GAMEMSG_RESPONSE_SOULGUARD_CHANGENAME);
		ClientMessageMap(GAMEMSG_RESPONSE_SOULGUARD_DEAD,						DoMsg_GAMEMSG_RESPONSE_SOULGUARD_DEAD);
		ClientMessageMap(GAMEMSG_RESPONSE_SOULGUARD_GET,						DoMsg_GAMEMSG_RESPONSE_SOULGUARD_GET);

		ClientMessageMap(GAMEMSG_RESPONSE_SOULGUARD_HOUSE_GET,					DoMsg_GAMEMSG_RESPONSE_SOULGUARD_HOUSE_GET);
		ClientMessageMap(GAMEMSG_RESPONSE_SOULGUARD_HOUSE_CREATE,				DoMsg_GAMEMSG_RESPONSE_SOULGUARD_HOUSE_CREATE);

		// [성웅] 라쿤 이벤트//Switch_10MonthEvent_RacoonDodge
		ClientMessageMap(GAMEMSG_RESPONS_RACOONDODGE_EVENT_WAIT5SECOND,				DoMsg_GAMEMSG_RESPONSE_RACOONDODGE_EVENT_WAIT5SECOND);
		ClientMessageMap(GAMEMSG_RESPONS_RACOONDODGE_EVENT_REQUEST_PLAYEVENT,		DoMsg_GAMEMSG_RESPONSE_RACOONDODGE_REQUEST_PLAYEVENT);
		ClientMessageMap(GAMEMSG_RESPONS_RACOONDODGE_EVENT_RESERVATION,				DoMsg_GAMEMSG_RESPONSE_RACOONDODGE_EVENT_RESERVATION);

		ClientMessageMap(GAMEMSG_RESPONS_RACOONDODGE_EVENT_30SECOND,				DoMsg_GAMEMSG_RESPONSE_RACOONDODGE_EVENT_30SECOND);
		ClientMessageMap(GAMEMSG_RESPONS_RACOONDODGE_EVENT_ROUNDCOUNT,				DoMsg_GAMEMSG_RESPONSE_RACOONDODGE_EVENT_ROUNDCOUNT);
		ClientMessageMap(GAMEMSG_RESPONS_RACOONDODGE_EVENT_30SECOND_CLEAR,			DoMsg_GAMEMSG_RESPONSE_RACOONDODGE_EVENT_30SECOND_CLEAR);
		ClientMessageMap(GAMEMSG_RESPONS_RACOONDODGE_EVENT_ROUNDCOUNT_CLEAR,		DoMsg_GAMEMSG_RESPONSE_RACOONDODGE_EVENT_ROUNDCOUNT_CLEAR);


		// [기형] 휴면 계정 시스템
		ClientMessageMap(GAMEMSG_RESPONSE_DORMANCY_TAKEOUTEQUIPITEMINBOX,		DoMsg_GAMEMSG_RESPONSE_DORMANCY_TAKEOUTEQUIPITEMINBOX);
		ClientMessageMap(GAMEMSG_RESPONSE_DORMANCY_REFRESHPOINTINFO,			DoMsg_GAMEMSG_RESPONSE_DORMANCY_REFRESHPOINTINFO);

		//  [8/12/2009 종호_GAWIBAWIBO]
		ClientMessageMap(GAMEMSG_RESPONSE_GAWIBAWIBO_CHARGED_MONEY,		DoMsg_GAMEMSG_RESPONSE_GAWIBAWIBO_CHARGED_MONEY);
		ClientMessageMap(GAMEMSG_RESPONSE_GAWIBAWIBO_CALCULATE_RESULT,	DoMsg_GAMEMSG_RESPONSE_GAWIBAWIBO_CALCULATE_RESULT);
		//ClientMessageMap(GAMEMSG_RESPONSE_GAWIBAWIBO_COUNT,				DoMsg_GAMEMSG_RESPONSE_GAWIBAWIBO_COUNT);
		ClientMessageMap(GAMEMSG_RESPONSE_GAWIBAWIBO_NOTICE_RESULT,		DoMsg_GAMEMSG_RESPONSE_GAWIBAWIBO_NOTICE_RESULT);

		// [지연] 복불복 게임
		ClientMessageMap(GAMEMSG_RESPONSE_BOKBULBOK_CHECK_ENTERMAP_ENABLE,		DoMsg_GAMEMSG_RESPONSE_BOKBULBOK_CHECK_ENTERMAP_ENABLE);
		ClientMessageMap(GAMEMSG_RESPONSE_BOKBULBOK_CHECK_WAITLIST_ENABLE,		DoMsg_GAMEMSG_RESPONSE_BOKBULBOK_CHECK_WAITLIST_ENABLE);
		ClientMessageMap(GAMEMSG_RESPONSE_BOKBULBOK_CHECK_ENTRYREQUEST_FAIL,	DoMsg_GAMEMSG_RESPONSE_BOKBULBOK_CHECK_ENTRYREQUEST_FAIL);
		ClientMessageMap(GAMEMSG_RESPONSE_BBB_WAITLIST_ANSWER,					DoMsg_GAMEMSG_RESPONSE_BBB_WAITLIST_ANSWER);
		ClientMessageMap(GAMEMSG_RESPONSE_BBB_WAITLIST_CANCEL,					DoMsg_GAMEMSG_RESPONSE_BBB_WAITLIST_CANCEL);
		ClientMessageMap(GAMEMSG_RESPONSE_BBB_STAGESTART,						DoMsg_GAMEMSG_RESPONSE_BBB_STAGESTART);
		ClientMessageMap(GAMEMSG_RESPONSE_BBB_STAGEFAIL,						DoMsg_GAMEMSG_RESPONSE_BBB_STAGEFAIL);
		ClientMessageMap(GAMEMSG_RESPONSE_BBB_WARPMAPQUESTION,					DoMsg_GAMEMSG_RESPONSE_BBB_WARPMAPQUESTION);
		ClientMessageMap(GAMEMSG_RESPONSE_BBB_NOTENOUGHMONEY,					DoMsg_GAMEMSG_RESPONSE_BBB_NOTENOUGHMONEY);
		ClientMessageMap(GAMEMSG_RESPONSE_BBB_STAGECLEAR,						DoMsg_GAMEMSG_RESPONSE_BBB_STAGECLEAR);
		ClientMessageMap(GAMEMSG_RESPONSE_BBB_GM_SHOWMONSTERTYPE,				DoMsg_GAMEMSG_RESPONSE_BBB_GM_SHOWMONSTERTYPE);
		ClientMessageMap(GAMEMSG_RESPONSE_BBB_10CLEARNOTICE,					DoMsg_GAMEMSG_RESPONSE_BBB_10CLEARNOTICE);
		ClientMessageMap(GAMEMSG_RESPONSE_BBB_ALREADYRESERVED,					DoMsg_GAMEMSG_RESPONSE_BBB_ALREADYRESERVED);

		// [강형] 새로운 내구도 시스템
		ClientMessageMap(GAMEMSG_RESPONSE_NEWNPCREPAIR,							DoMsg_GAMEMSG_RESPONSE_NEWNPCREPAIR);
		ClientMessageMap(GAMEMSG_RESPONSE_NEWITEMREPAIR,						DoMsg_GAMEMSG_RESPONSE_NEWITEMREPAIR);
		ClientMessageMap(GAMEMSG_RESPONSE_NEWITEMREPAIRREQUESTINFO,				DoMsg_GAMEMSG_RESPONSE_NEWITEMREPAIRREQUESTINFO);

		// [기형] 배틀로얄
		ClientMessageMap(GAMEMSG_RESPONSE_BATTLEROYAL_NOTICERESULT,				DoMsg_GAMEMSG_RESPONSE_BATTLEROYAL_NOTICERESULT);
		ClientMessageMap(GAMEMSG_RESPONSE_BATTLEROYAL_REMAINEDTIME,				DoMsg_GAMEMSG_RESPONSE_BATTLEROYAL_REMAINEDTIME);
		ClientMessageMap(GAMEMSG_RESPONSE_BATTLEROYAL_STARTGAME,				DoMsg_GAMEMSG_RESPONSE_BATTLEROYAL_STARTGAME);
		ClientMessageMap(GAMEMSG_RESPONSE_BATTLEROYAL_ENDGAME,					DoMsg_GAMEMSG_RESPONSE_BATTLEROYAL_ENDGAME);
		ClientMessageMap(GAMEMSG_RESPONSE_BATTLEROYAL_POWERUPMODE,				DoMsg_GAMEMSG_RESPONSE_BATTLEROYAL_POWERUPMODE);
		ClientMessageMap(GAMEMSG_RESPONSE_BATTLEROYAL_OPENSTADIUM,				DoMsg_GAMEMSG_RESPONSE_BATTLEROYAL_OPENSTADIUM);

		// [기형] 발렌타인데이 이벤트
		ClientMessageMap(GAMEMSG_RESPONSE_VALENTINEEVENT_BUF,					DoMsg_GAMEMSG_RESPONSE_VALENTINEEVENT_BUF);
		ClientMessageMap(GAMEMSG_RESPONSE_VALENTINEEVENT_CHANGEBUF,				DoMsg_GAMEMSG_RESPONSE_VALENTINEEVENT_CHANGEBUF);
		ClientMessageMap(GAMEMSG_RESPONSE_VALENTINEEVENT_ISHOLDING,				DoMsg_GAMEMSG_RESPONSE_VALENTINEEVENT_ISHOLDING);
		ClientMessageMap(GAMEMSG_RESPONSE_VALENTINEEVENT_START,					DoMsg_GAMEMSG_RESPONSE_VALENTINEEVENT_START);
		ClientMessageMap(GAMEMSG_RESPONSE_VALENTINEEVENT_END,					DoMsg_GAMEMSG_RESPONSE_VALENTINEEVENT_END);
		ClientMessageMap(GAMEMSG_RESPONSE_VALENTINEEVENT_GIVE_PRESENT_TONPC,	DoMsg_GAMEMSG_RESPONSE_VALENTINEEVENT_GIVE_PRESENT_TONPC);

		//-------------------------------------------------------------------------------------------------------------------
		//[성웅] 라쿤이벤트 군주 이벤트로 변경
		//-------------------------------------------------------------------------------------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_RACCOONEVENT_TOGOONZU,				DoMsg_GAMEMSG_RESPONSE__RACCOONEVENT_TOGOONZU);
		ClientMessageMap(GAMEMSG_RESPONSE_GOONZURACCOONEVENT_SETINFO,			DoMsg_GAMEMSG_RESPONSE__GOONZURACCOONEVENT_SETINFO);

		//-------------------------------------------------------------------------------------------------------------------
		//[진성] 스킬북
		//-------------------------------------------------------------------------------------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_SKILLBOOK_MAGICINFO_GET,				DoMsg_GAMEMSG_RESPONSE_SKILLBOOK_MAGICINFO_GET);
		ClientMessageMap(GAMEMSG_RESPONSE_SKILLBOOK_MAGIC_ADD,					DoMsg_GAMEMSG_RESPONSE_SKILLBOOK_MAGIC_SET);
		ClientMessageMap(GAMEMSG_RESPONSE_SKILLBOOK_MAGIC_DEL,					DoMsg_GAMEMSG_RESPONSE_SKILLBOOK_MAGIC_DEL);
		ClientMessageMap(GAMEMSG_RESPONSE_SKILLBOOK_SUBMAGIC_ADD,				DoMsg_GAMEMSG_RESPONSE_SKILLBOOK_SUBMAGIC_ADD);
		ClientMessageMap(GAMEMSG_RESPONSE_SKILLBOOK_SUBMAGIC_DEL,				DoMsg_GAMEMSG_RESPONSE_SKILLBOOK_SUBMAGIC_DEL);
		ClientMessageMap(GAMEMSG_RESPONSE_CURSEINFO,							DoMsg_GAMEMSG_RESPONSE_CURSEINFO);
		
		//-------------------------------------------------------------------------------------------------------------------
		// [지연] 2010 신년이벤트
		//-------------------------------------------------------------------------------------------------------------------
		ClientMessageMap(GAMEMSG_RESPONSE_FORTUNERESULT,						DoMsg_GAMEMSG_RESPONSE_FORTUNERESULT);

		// [지연] 군주데이 - 이벤트 아이템 사용으로 생성된 미션에 대한 정보 통보
		ClientMessageMap(GAMEMSG_RESPONSE_GOONZUDAYMISSION,						DoMsg_GAMEMSG_RESPONSE_GOONZUDAYMISSION);
		
		//-------------------------------------------------------------------------------------------------------------------
		// 메크로
		//-------------------------------------------------------------------------------------------------------------------

		ClientMessageMap( GAMEMSG_REQUEST_RECORD_ACTION,						DoMsg_GAMEMSG_REQUEST_RECORD_ACTION );
		ClientMessageMap( GAMEMSG_RESPONSE_RECORD_ACTION_FINISHED,				DoMsg_GAMEMSG_RESPONSE_RECORD_ACTION_FINISHED );

		ClientMessageMap( GAMEMSG_GZFTP_PROTOCOL,								DoMsg_GAMEMSG_GZFTP_PROTOCOL );

		//////////////////////////////////////////////////////////////////////////
		// [종호] 파티퀘스트
		//////////////////////////////////////////////////////////////////////////
		ClientMessageMap( GAMEMSG_RESPONSE_PARTY_QUEST_CHECKSTART,				DoMsg_GAMEMSG_RESPONSE_PARTY_QUEST_CHECKSTART );
		ClientMessageMap( GAMEMSG_RESPONSE_PARTY_QUEST_START,					DoMsg_GAMEMSG_RESPONSE_PARTY_QUEST_START);
		ClientMessageMap( GAMEMSG_RESPONSE_PARTY_QUEST_UPDATE,					DoMsg_GAMEMSG_RESPONSE_PARTY_QUEST_UPDATE);
		ClientMessageMap( GAMEMSG_RESPONSE_PARTY_QUEST_GIVEUP,					DoMsg_GAMEMSG_RESPONSE_PARTY_QUEST_GIVEUP);
		
		ClientMessageMap( GAMEMSG_RESPONSE_CONTRIBUTION_ITEM_LIST,				DoMsg_GAMEMSG_RESPONSE_CONTRIBUTION_ITEM_LIST);
		ClientMessageMap( GAMEMSG_RESPONSE_CONTRIBUTION_ITEM_LIST_INPUT,		DoMsg_GAMEMSG_RESPONSE_CONTRIBUTION_INPUT_ITEM_LIST);

		
		//-------------------------------------------------------------------------------------------------------------------
		// [지연] 초보자 파티 퀘스트 시스템
		//-------------------------------------------------------------------------------------------------------------------
		ClientMessageMap( GAMEMSG_RESPONSE_PARTYMATCHING_LEVEL,					DoMsg_GAMEMSG_RESPONSE_PARTYMATCHING_LEVEL );
		ClientMessageMap( GAMEMSG_RESPONSE_APPLYTOPARTYJOIN,					DoMsg_GAMEMSG_RESPONSE_APPLYTOPARTYJOIN );
		ClientMessageMap( GAMEMSG_RESPONSE_CREATECOMPLETEPARTY,					DoMsg_GAMEMSG_RESPONSE_CREATECOMPLETEPARTY );
		ClientMessageMap( GAMEMSG_RESPONSE_GETPARTYMEMBERNAMELIST,				DoMsg_GAMEMSG_RESPONSE_GETPARTYMEMBERNAMELIST );
		ClientMessageMap( GAMEMSG_RESPONSE_PARTYMATCHINGEXCEPTION,				DoMsg_GAMEMSG_RESPONSE_PARTYMATCHINGEXCEPTION );

		ClientMessageMap( GAMEMSG_RESPONSE_GIANTRACCOON_RESURRECT_EVENT_START,	DoMsg_GAMEMSG_RESPONSE_GIANTRACCOON_RESURRECT_EVENT_START );
		

		//[성웅] 제조 제작 의뢰 검색 
		ClientMessageMap( GAMEMSG_RESPONSE_SEARCHMANUFACTURE,	DoMsg_GAMEMSG_RESPONSE_SEARCHMANUFACTURE );	

		//[진성] 발렌타인데이 포장. 
		ClientMessageMap( GAMEMSG_RESPONSE_VALENTINEDAY_ITEM_PACKING,				DoMsg_GAMEMSG_RESPONSE_VALENTINEDAY_ITEM_PACKING );	
		ClientMessageMap( GAMEMSG_RESPONSE_VALENTINEDAY_BUY_ITEM,					DoMsg_GAMEMSG_RESPONSE_VALENTINEDAY_BUY_ITEM);	
		ClientMessageMap( GAMEMSG_RESPONSE_VALENTINEDAY_CONFESSION_QUESTION,		DoMsg_GAMEMSG_RESPONSE_VALENTINEDAY_CONFESSION_QUESTION);	
		ClientMessageMap( GAMEMSG_RESPONSE_VALENTINEDAY_CONFESSION_ANSWER,			DoMsg_GAMEMSG_RESPONSE_VALENTINEDAY_CONFESSION_ANSWER);	
		
		
		
	}
}

// 클라이언트의 InBuffer에 들어 있는 명령들을 처리한다. 
BOOL cltClient::InBufferMessageOperation(cltMsg* pclMsg, SI32 id)
{
	// 메시지를 수령한 시간을 확인한다.
	dwLastReceiveFromServerClock = CurrentClock;
	TCHAR Nbuffer[512]= TEXT(" ");


	if(pclMsg->clHead.usCmd >= GAMEMSG_END)
	{
		TCHAR buffer[256];
		StringCchPrintf(buffer, 256, TEXT("Msg:%d Size:%d"), pclMsg->clHead.usCmd, pclMsg->clHead.usSize);
		MessageBox(NULL, buffer, TEXT("InBufferMessageOperation"), MB_OK|MB_TOPMOST);
		return FALSE;
	}

	if(pclMsg->clHead.usSize > sizeof(cltMsg))
	{
		TCHAR buffer[256];
		StringCchPrintf(buffer, 256, TEXT("Msg:%d Size:%d"), pclMsg->clHead.usCmd, pclMsg->clHead.usSize);
		MessageBox(NULL, buffer, TEXT("InBufferMessageOperation"), MB_OK|MB_TOPMOST);
		return FALSE;
	}

	if(pclMsg->clHead.usCmd >= 0 && pclMsg->clHead.usCmd < GAMEMSG_END)
	{
		(this->*(this->m_pClientMsgPtr[pclMsg->clHead.usCmd].ClientMsgFunc))(pclMsg, id);
	}
	else
	{
		ClientMsgNullFunc(pclMsg, id);
	}

	return TRUE;
}

